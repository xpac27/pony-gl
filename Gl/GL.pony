use "lib:opengl32" if windows
use "lib:GL" if linux
use "lib:GLESv2" if linux
use "lib:OpenGL" if osx
use "lib:OpenGLES" if osx // or ios arm

// Extracted from https://github.com/KhronosGroup/OpenGL-Registry/blob/b9e1d1a1b37bb064a6d0e3fceffa8aeab5713a38/api/GL/glcorearb.h
//
// Omitted the following:
/* use @glCreateSyncFromCLeventARB[GLsync](context: Pointer[CLcontext], event: Pointer[CLevent], flags: GLbitfield) */
/* use @glEGLImageTargetTexStorageEXT[None](target: GLenum, image: GLeglImageOES, attrib_list: Pointer[GLint] tag) */
/* use @glEGLImageTargetTextureStorageEXT[None](texture: GLuint, image: GLeglImageOES, attrib_list: Pointer[GLint] tag) */
/* use @glGetBufferPointerv[None](target: GLenum, pname: GLenum, params: Pointer[Pointer[None]] tag) */
/* use @glGetNamedBufferPointervEXT[None](buffer: GLuint, pname: GLenum, params: Pointer[Pointer[None]] tag) */
/* use @glGetNamedBufferPointerv[None](buffer: GLuint, pname: GLenum, params: Pointer[Pointer[None]] tag) */
/* use @glGetPointerIndexedvEXT[None](target: GLenum, index: GLuint, data: Pointer[Pointer[None]] tag) */
/* use @glGetPointeri_vEXT[None](pname: GLenum, index: GLuint, params: Pointer[Pointer[None]] tag) */
/* use @glGetPointerv[None](pname: GLenum, params: Pointer[Pointer[None]] tag) */
/* use @glGetVertexArrayPointeri_vEXT[None](vaobj: GLuint, index: GLuint, pname: GLenum, param: Pointer[Pointer[None]] tag) */
/* use @glGetVertexArrayPointervEXT[None](vaobj: GLuint, pname: GLenum, param: Pointer[Pointer[None]] tag) */
/* use @glGetVertexAttribPointerv[None](index: GLuint, pname: GLenum, pointer: Pointer[Pointer[None]] tag) */

use @glGetString[Pointer[GLubyte]](name: GLenum)
use @glGetStringi[Pointer[GLubyte]](name: GLenum, index: GLuint)
use @glMapBuffer[None](target: GLenum, access: GLenum)
use @glMapBufferRange[None](target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield)
use @glMapNamedBuffer[None](buffer: GLuint, access: GLenum)
use @glMapNamedBufferEXT[None](buffer: GLuint, access: GLenum)
use @glMapNamedBufferRange[None](buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield)
use @glMapNamedBufferRangeEXT[None](buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield)
use @glActiveProgramEXT[None](program: GLuint)
use @glActiveShaderProgram[None](pipeline: GLuint, program: GLuint)
use @glActiveTexture[None](texture: GLenum)
use @glApplyFramebufferAttachmentCMAAINTEL[None]()
use @glAttachShader[None](program: GLuint, shader: GLuint)
use @glBeginConditionalRenderNV[None](id: GLuint, mode: GLenum)
use @glBeginConditionalRender[None](id: GLuint, mode: GLenum)
use @glBeginPerfMonitorAMD[None](monitor: GLuint)
use @glBeginPerfQueryINTEL[None](queryHandle: GLuint)
use @glBeginQueryIndexed[None](target: GLenum, index: GLuint, id: GLuint)
use @glBeginQuery[None](target: GLenum, id: GLuint)
use @glBeginTransformFeedback[None](primitiveMode: GLenum)
use @glBindAttribLocation[None](program: GLuint, index: GLuint, name: Pointer[GLchar] tag)
use @glBindBufferBase[None](target: GLenum, index: GLuint, buffer: GLuint)
use @glBindBufferRange[None](target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
use @glBindBuffer[None](target: GLenum, buffer: GLuint)
use @glBindBuffersBase[None](target: GLenum, first: GLuint, count: GLsizei, buffers: Pointer[GLuint] tag)
use @glBindBuffersRange[None](target: GLenum, first: GLuint, count: GLsizei, buffers: Pointer[GLuint] tag, offsets: Pointer[GLintptr] tag, sizes: Pointer[GLsizeiptr] tag)
use @glBindFragDataLocationIndexed[None](program: GLuint, colorNumber: GLuint, index: GLuint, name: Pointer[GLchar] tag)
use @glBindFragDataLocation[None](program: GLuint, color: GLuint, name: Pointer[GLchar] tag)
use @glBindFramebuffer[None](target: GLenum, framebuffer: GLuint)
use @glBindImageTexture[None](unit: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLenum)
use @glBindImageTextures[None](first: GLuint, count: GLsizei, textures: Pointer[GLuint] tag)
use @glBindMultiTextureEXT[None](texunit: GLenum, target: GLenum, texture: GLuint)
use @glBindProgramPipeline[None](pipeline: GLuint)
use @glBindRenderbuffer[None](target: GLenum, renderbuffer: GLuint)
use @glBindSampler[None](unit: GLuint, sampler: GLuint)
use @glBindSamplers[None](first: GLuint, count: GLsizei, samplers: Pointer[GLuint] tag)
use @glBindShadingRateImageNV[None](texture: GLuint)
use @glBindTextureUnit[None](unit: GLuint, texture: GLuint)
use @glBindTexture[None](target: GLenum, texture: GLuint)
use @glBindTextures[None](first: GLuint, count: GLsizei, textures: Pointer[GLuint] tag)
use @glBindTransformFeedback[None](target: GLenum, id: GLuint)
use @glBindVertexArray[None](array: GLuint)
use @glBindVertexBuffer[None](bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei)
use @glBindVertexBuffers[None](first: GLuint, count: GLsizei, buffers: Pointer[GLuint] tag, offsets: Pointer[GLintptr] tag, strides: Pointer[GLsizei] tag)
use @glBlendBarrierKHR[None]()
use @glBlendBarrierNV[None]()
use @glBlendColor[None](red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat)
use @glBlendEquationSeparate[None](modeRGB: GLenum, modeAlpha: GLenum)
use @glBlendEquationSeparateiARB[None](buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum)
use @glBlendEquationSeparatei[None](buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum)
use @glBlendEquation[None](mode: GLenum)
use @glBlendEquationiARB[None](buf: GLuint, mode: GLenum)
use @glBlendEquationi[None](buf: GLuint, mode: GLenum)
use @glBlendFuncSeparate[None](sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum)
use @glBlendFuncSeparateiARB[None](buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum)
use @glBlendFuncSeparatei[None](buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum)
use @glBlendFunc[None](sfactor: GLenum, dfactor: GLenum)
use @glBlendFunciARB[None](buf: GLuint, src: GLenum, dst: GLenum)
use @glBlendFunci[None](buf: GLuint, src: GLenum, dst: GLenum)
use @glBlendParameteriNV[None](pname: GLenum, value: GLint)
use @glBlitFramebuffer[None](srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
use @glBlitNamedFramebuffer[None](readFramebuffer: GLuint, drawFramebuffer: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum)
use @glBufferAddressRangeNV[None](pname: GLenum, index: GLuint, address: GLuint64EXT, length: GLsizeiptr)
use @glBufferAttachMemoryNV[None](target: GLenum, memory: GLuint, offset: GLuint64)
use @glBufferData[None](target: GLenum, size: GLsizeiptr, data: Pointer[None], usage: GLenum)
use @glBufferPageCommitmentARB[None](target: GLenum, offset: GLintptr, size: GLsizeiptr, commit: GLboolean)
use @glBufferPageCommitmentMemNV[None](target: GLenum, offset: GLintptr, size: GLsizeiptr, memory: GLuint, memOffset: GLuint64, commit: GLboolean)
use @glBufferStorage[None](target: GLenum, size: GLsizeiptr, data: Pointer[None], flags: GLbitfield)
use @glBufferSubData[None](target: GLenum, offset: GLintptr, size: GLsizeiptr, data: Pointer[None])
use @glCallCommandListNV[None](list: GLuint)
use @glCheckFramebufferStatus[GLenum](target: GLenum)
use @glCheckNamedFramebufferStatusEXT[GLenum](framebuffer: GLuint, target: GLenum)
use @glCheckNamedFramebufferStatus[GLenum](framebuffer: GLuint, target: GLenum)
use @glClampColor[None](target: GLenum, clamp: GLenum)
use @glClearBufferData[None](target: GLenum, internalformat: GLenum, format: GLenum, type': GLenum, data: Pointer[None])
use @glClearBufferSubData[None](target: GLenum, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type': GLenum, data: Pointer[None])
use @glClearBufferfi[None](buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint)
use @glClearBufferfv[None](buffer: GLenum, drawbuffer: GLint, value: Pointer[GLfloat] tag)
use @glClearBufferiv[None](buffer: GLenum, drawbuffer: GLint, value: Pointer[GLint] tag)
use @glClearBufferuiv[None](buffer: GLenum, drawbuffer: GLint, value: Pointer[GLuint] tag)
use @glClearColor[None](red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat)
use @glClearDepth[None](depth: GLdouble)
use @glClearDepthdNV[None](depth: GLdouble)
use @glClearDepthf[None](d: GLfloat)
use @glClearNamedBufferDataEXT[None](buffer: GLuint, internalformat: GLenum, format: GLenum, type': GLenum, data: Pointer[None])
use @glClearNamedBufferData[None](buffer: GLuint, internalformat: GLenum, format: GLenum, type': GLenum, data: Pointer[None])
use @glClearNamedBufferSubDataEXT[None](buffer: GLuint, internalformat: GLenum, offset: GLsizeiptr, size: GLsizeiptr, format: GLenum, type': GLenum, data: Pointer[None])
use @glClearNamedBufferSubData[None](buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type': GLenum, data: Pointer[None])
use @glClearNamedFramebufferfi[None](framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint)
use @glClearNamedFramebufferfv[None](framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: Pointer[GLfloat] tag)
use @glClearNamedFramebufferiv[None](framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: Pointer[GLint] tag)
use @glClearNamedFramebufferuiv[None](framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: Pointer[GLuint] tag)
use @glClearStencil[None](s: GLint)
use @glClearTexImage[None](texture: GLuint, level: GLint, format: GLenum, type': GLenum, data: Pointer[None])
use @glClearTexSubImage[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type': GLenum, data: Pointer[None])
use @glClear[None](mask: GLbitfield)
use @glClientAttribDefaultEXT[None](mask: GLbitfield)
use @glClientWaitSync[GLenum](sync: GLsync, flags: GLbitfield, timeout: GLuint64)
use @glClipControl[None](origin: GLenum, depth: GLenum)
use @glColorFormatNV[None](size: GLint, type': GLenum, stride: GLsizei)
use @glColorMask[None](red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean)
use @glColorMaski[None](index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean)
use @glCommandListSegmentsNV[None](list: GLuint, segments: GLuint)
use @glCompileCommandListNV[None](list: GLuint)
use @glCompileShaderIncludeARB[None](shader: GLuint, count: GLsizei, path: Pointer[GLchar] tag, length: Pointer[GLint] tag)
use @glCompileShader[None](shader: GLuint)
use @glCompressedMultiTexImage1DEXT[None](texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedMultiTexImage2DEXT[None](texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedMultiTexImage3DEXT[None](texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedMultiTexSubImage1DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedMultiTexSubImage2DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedMultiTexSubImage3DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedTexImage1D[None](target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: Pointer[None])
use @glCompressedTexImage2D[None](target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: Pointer[None])
use @glCompressedTexImage3D[None](target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: Pointer[None])
use @glCompressedTexSubImage1D[None](target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: Pointer[None])
use @glCompressedTexSubImage2D[None](target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: Pointer[None])
use @glCompressedTexSubImage3D[None](target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: Pointer[None])
use @glCompressedTextureImage1DEXT[None](texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedTextureImage2DEXT[None](texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedTextureImage3DEXT[None](texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedTextureSubImage1DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedTextureSubImage1D[None](texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: Pointer[None])
use @glCompressedTextureSubImage2DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedTextureSubImage2D[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: Pointer[None])
use @glCompressedTextureSubImage3DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, bits: Pointer[None])
use @glCompressedTextureSubImage3D[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: Pointer[None])
use @glConservativeRasterParameterfNV[None](pname: GLenum, value: GLfloat)
use @glConservativeRasterParameteriNV[None](pname: GLenum, param: GLint)
use @glCopyBufferSubData[None](readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr)
use @glCopyImageSubData[None](srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei)
use @glCopyMultiTexImage1DEXT[None](texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint)
use @glCopyMultiTexImage2DEXT[None](texunit: GLenum, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint)
use @glCopyMultiTexSubImage1DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)
use @glCopyMultiTexSubImage2DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glCopyMultiTexSubImage3DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glCopyNamedBufferSubData[None](readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr)
use @glCopyPathNV[None](resultPath: GLuint, srcPath: GLuint)
use @glCopyTexImage1D[None](target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint)
use @glCopyTexImage2D[None](target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint)
use @glCopyTexSubImage1D[None](target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)
use @glCopyTexSubImage2D[None](target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glCopyTexSubImage3D[None](target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glCopyTextureImage1DEXT[None](texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint)
use @glCopyTextureImage2DEXT[None](texture: GLuint, target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint)
use @glCopyTextureSubImage1DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)
use @glCopyTextureSubImage1D[None](texture: GLuint, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei)
use @glCopyTextureSubImage2DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glCopyTextureSubImage2D[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glCopyTextureSubImage3DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glCopyTextureSubImage3D[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glCoverFillPathInstancedNV[None](numPaths: GLsizei, pathNametype': GLenum, paths: Pointer[None], pathBase: GLuint, coverMode: GLenum, transformtype': GLenum, transformValues: Pointer[GLfloat] tag)
use @glCoverFillPathNV[None](path: GLuint, coverMode: GLenum)
use @glCoverStrokePathInstancedNV[None](numPaths: GLsizei, pathNametype': GLenum, paths: Pointer[None], pathBase: GLuint, coverMode: GLenum, transformtype': GLenum, transformValues: Pointer[GLfloat] tag)
use @glCoverStrokePathNV[None](path: GLuint, coverMode: GLenum)
use @glCoverageModulationNV[None](components: GLenum)
use @glCoverageModulationTableNV[None](n: GLsizei, v: Pointer[GLfloat] tag)
use @glCreateBuffers[None](n: GLsizei, buffers: Pointer[GLuint] tag)
use @glCreateCommandListsNV[None](n: GLsizei, lists: Pointer[GLuint] tag)
use @glCreateFramebuffers[None](n: GLsizei, framebuffers: Pointer[GLuint] tag)
use @glCreatePerfQueryINTEL[None](queryId: GLuint, queryHandle: Pointer[GLuint] tag)
use @glCreateProgramPipelines[None](n: GLsizei, pipelines: Pointer[GLuint] tag)
use @glCreateProgram[GLuint]()
use @glCreateQueries[None](target: GLenum, n: GLsizei, ids: Pointer[GLuint] tag)
use @glCreateRenderbuffers[None](n: GLsizei, renderbuffers: Pointer[GLuint] tag)
use @glCreateSamplers[None](n: GLsizei, samplers: Pointer[GLuint] tag)
use @glCreateShaderProgramEXT[GLuint](type': GLenum, string: Pointer[GLchar] tag)
use @glCreateShaderProgramv[GLuint](type': GLenum, count: GLsizei, strings: Pointer[GLchar] tag)
use @glCreateShader[GLuint](type': GLenum)
use @glCreateStatesNV[None](n: GLsizei, states: Pointer[GLuint] tag)
use @glCreateTextures[None](target: GLenum, n: GLsizei, textures: Pointer[GLuint] tag)
use @glCreateTransformFeedbacks[None](n: GLsizei, ids: Pointer[GLuint] tag)
use @glCreateVertexArrays[None](n: GLsizei, arrays: Pointer[GLuint] tag)
use @glCullFace[None](mode: GLenum)
use @glDebugMessageCallbackARB[None](callback: Pointer[None], userParam: Pointer[None])
use @glDebugMessageCallback[None](callback: Pointer[None], userParam: Pointer[None])
use @glDebugMessageControlARB[None](source: GLenum, type': GLenum, severity: GLenum, count: GLsizei, ids: Pointer[GLuint] tag, enabled: GLboolean)
use @glDebugMessageControl[None](source: GLenum, type': GLenum, severity: GLenum, count: GLsizei, ids: Pointer[GLuint] tag, enabled: GLboolean)
use @glDebugMessageInsertARB[None](source: GLenum, type': GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: Pointer[GLchar] tag)
use @glDebugMessageInsert[None](source: GLenum, type': GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: Pointer[GLchar] tag)
use @glDeleteBuffers[None](n: GLsizei, buffers: Pointer[GLuint] tag)
use @glDeleteCommandListsNV[None](n: GLsizei, lists: Pointer[GLuint] tag)
use @glDeleteFramebuffers[None](n: GLsizei, framebuffers: Pointer[GLuint] tag)
use @glDeleteNamedStringARB[None](namelen: GLint, name: Pointer[GLchar] tag)
use @glDeletePathsNV[None](path: GLuint, range: GLsizei)
use @glDeletePerfMonitorsAMD[None](n: GLsizei, monitors: Pointer[GLuint] tag)
use @glDeletePerfQueryINTEL[None](queryHandle: GLuint)
use @glDeleteProgramPipelines[None](n: GLsizei, pipelines: Pointer[GLuint] tag)
use @glDeleteProgram[None](program: GLuint)
use @glDeleteQueries[None](n: GLsizei, ids: Pointer[GLuint] tag)
use @glDeleteRenderbuffers[None](n: GLsizei, renderbuffers: Pointer[GLuint] tag)
use @glDeleteSamplers[None](count: GLsizei, samplers: Pointer[GLuint] tag)
use @glDeleteShader[None](shader: GLuint)
use @glDeleteStatesNV[None](n: GLsizei, states: Pointer[GLuint] tag)
use @glDeleteSync[None](sync: GLsync)
use @glDeleteTextures[None](n: GLsizei, textures: Pointer[GLuint] tag)
use @glDeleteTransformFeedbacks[None](n: GLsizei, ids: Pointer[GLuint] tag)
use @glDeleteVertexArrays[None](n: GLsizei, arrays: Pointer[GLuint] tag)
use @glDepthBoundsdNV[None](zmin: GLdouble, zmax: GLdouble)
use @glDepthFunc[None](func: GLenum)
use @glDepthMask[None](flag: GLboolean)
use @glDepthRangeArraydvNV[None](first: GLuint, count: GLsizei, v: Pointer[GLdouble] tag)
use @glDepthRangeArrayv[None](first: GLuint, count: GLsizei, v: Pointer[GLdouble] tag)
use @glDepthRangeIndexed[None](index: GLuint, n: GLdouble, f: GLdouble)
use @glDepthRangeIndexeddNV[None](index: GLuint, n: GLdouble, f: GLdouble)
use @glDepthRange[None](n: GLdouble, f: GLdouble)
use @glDepthRangedNV[None](zNear: GLdouble, zFar: GLdouble)
use @glDepthRangef[None](n: GLfloat, f: GLfloat)
use @glDetachShader[None](program: GLuint, shader: GLuint)
use @glDisableClientStateIndexedEXT[None](array: GLenum, index: GLuint)
use @glDisableClientStateiEXT[None](array: GLenum, index: GLuint)
use @glDisableIndexedEXT[None](target: GLenum, index: GLuint)
use @glDisableVertexArrayAttribEXT[None](vaobj: GLuint, index: GLuint)
use @glDisableVertexArrayAttrib[None](vaobj: GLuint, index: GLuint)
use @glDisableVertexArrayEXT[None](vaobj: GLuint, array: GLenum)
use @glDisableVertexAttribArray[None](index: GLuint)
use @glDisable[None](cap: GLenum)
use @glDisablei[None](target: GLenum, index: GLuint)
use @glDispatchComputeGroupSizeARB[None](num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint, group_size_x: GLuint, group_size_y: GLuint, group_size_z: GLuint)
use @glDispatchComputeIndirect[None](indirect: GLintptr)
use @glDispatchCompute[None](num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint)
use @glDrawArraysIndirect[None](mode: GLenum, indirect: Pointer[None])
use @glDrawArraysInstancedARB[None](mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei)
use @glDrawArraysInstancedBaseInstance[None](mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei, baseinstance: GLuint)
use @glDrawArraysInstancedEXT[None](mode: GLenum, start: GLint, count: GLsizei, primcount: GLsizei)
use @glDrawArraysInstanced[None](mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei)
use @glDrawArrays[None](mode: GLenum, first: GLint, count: GLsizei)
use @glDrawBuffer[None](buf: GLenum)
use @glDrawBuffers[None](n: GLsizei, bufs: Pointer[GLenum] tag)
use @glDrawCommandsAddressNV[None](primitiveMode: GLenum, indirects: Pointer[GLuint64] tag, sizes: Pointer[GLsizei] tag, count: GLuint)
use @glDrawCommandsNV[None](primitiveMode: GLenum, buffer: GLuint, indirects: Pointer[GLintptr] tag, sizes: Pointer[GLsizei] tag, count: GLuint)
use @glDrawCommandsStatesAddressNV[None](indirects: Pointer[GLuint64] tag, sizes: Pointer[GLsizei] tag, states: Pointer[GLuint] tag, fbos: Pointer[GLuint] tag, count: GLuint)
use @glDrawCommandsStatesNV[None](buffer: GLuint, indirects: Pointer[GLintptr] tag, sizes: Pointer[GLsizei] tag, states: Pointer[GLuint] tag, fbos: Pointer[GLuint] tag, count: GLuint)
use @glDrawElementsBaseVertex[None](mode: GLenum, count: GLsizei, type': GLenum, indices: Pointer[None], basevertex: GLint)
use @glDrawElementsIndirect[None](mode: GLenum, type': GLenum, indirect: Pointer[None])
use @glDrawElementsInstancedARB[None](mode: GLenum, count: GLsizei, type': GLenum, indices: Pointer[None], primcount: GLsizei)
use @glDrawElementsInstancedBaseInstance[None](mode: GLenum, count: GLsizei, type': GLenum, indices: Pointer[None], instancecount: GLsizei, baseinstance: GLuint)
use @glDrawElementsInstancedBaseVertexBaseInstance[None](mode: GLenum, count: GLsizei, type': GLenum, indices: Pointer[None], instancecount: GLsizei, basevertex: GLint, baseinstance: GLuint)
use @glDrawElementsInstancedBaseVertex[None](mode: GLenum, count: GLsizei, type': GLenum, indices: Pointer[None], instancecount: GLsizei, basevertex: GLint)
use @glDrawElementsInstancedEXT[None](mode: GLenum, count: GLsizei, type': GLenum, indices: Pointer[None], primcount: GLsizei)
use @glDrawElementsInstanced[None](mode: GLenum, count: GLsizei, type': GLenum, indices: Pointer[None], instancecount: GLsizei)
use @glDrawElements[None](mode: GLenum, count: GLsizei, type': GLenum, indices: Pointer[None])
use @glDrawMeshTasksIndirectNV[None](indirect: GLintptr)
use @glDrawMeshTasksNV[None](first: GLuint, count: GLuint)
use @glDrawRangeElementsBaseVertex[None](mode: GLenum, start: GLuint, end': GLuint, count: GLsizei, type': GLenum, indices: Pointer[None], basevertex: GLint)
use @glDrawRangeElements[None](mode: GLenum, start: GLuint, end': GLuint, count: GLsizei, type': GLenum, indices: Pointer[None])
use @glDrawTransformFeedbackInstanced[None](mode: GLenum, id: GLuint, instancecount: GLsizei)
use @glDrawTransformFeedbackStreamInstanced[None](mode: GLenum, id: GLuint, stream: GLuint, instancecount: GLsizei)
use @glDrawTransformFeedbackStream[None](mode: GLenum, id: GLuint, stream: GLuint)
use @glDrawTransformFeedback[None](mode: GLenum, id: GLuint)
use @glDrawVkImageNV[None](vkImage: GLuint64, sampler: GLuint, x0: GLfloat, y0: GLfloat, x1: GLfloat, y1: GLfloat, z: GLfloat, s0: GLfloat, t0: GLfloat, s1: GLfloat, t1: GLfloat)
use @glEdgeFlagFormatNV[None](stride: GLsizei)
use @glEnableClientStateIndexedEXT[None](array: GLenum, index: GLuint)
use @glEnableClientStateiEXT[None](array: GLenum, index: GLuint)
use @glEnableIndexedEXT[None](target: GLenum, index: GLuint)
use @glEnableVertexArrayAttribEXT[None](vaobj: GLuint, index: GLuint)
use @glEnableVertexArrayAttrib[None](vaobj: GLuint, index: GLuint)
use @glEnableVertexArrayEXT[None](vaobj: GLuint, array: GLenum)
use @glEnableVertexAttribArray[None](index: GLuint)
use @glEnable[None](cap: GLenum)
use @glEnablei[None](target: GLenum, index: GLuint)
use @glEndConditionalRenderNV[None]()
use @glEndConditionalRender[None]()
use @glEndPerfMonitorAMD[None](monitor: GLuint)
use @glEndPerfQueryINTEL[None](queryHandle: GLuint)
use @glEndQueryIndexed[None](target: GLenum, index: GLuint)
use @glEndQuery[None](target: GLenum)
use @glEndTransformFeedback[None]()
use @glEvaluateDepthValuesARB[None]()
use @glFenceSync[GLsync](condition: GLenum, flags: GLbitfield)
use @glFinish[None]()
use @glFlushMappedBufferRange[None](target: GLenum, offset: GLintptr, length: GLsizeiptr)
use @glFlushMappedNamedBufferRangeEXT[None](buffer: GLuint, offset: GLintptr, length: GLsizeiptr)
use @glFlushMappedNamedBufferRange[None](buffer: GLuint, offset: GLintptr, length: GLsizeiptr)
use @glFlush[None]()
use @glFogCoordFormatNV[None](type': GLenum, stride: GLsizei)
use @glFragmentCoverageColorNV[None](color: GLuint)
use @glFramebufferDrawBufferEXT[None](framebuffer: GLuint, mode: GLenum)
use @glFramebufferDrawBuffersEXT[None](framebuffer: GLuint, n: GLsizei, bufs: Pointer[GLenum] tag)
use @glFramebufferFetchBarrierEXT[None]()
use @glFramebufferParameteriMESA[None](target: GLenum, pname: GLenum, param: GLint)
use @glFramebufferParameteri[None](target: GLenum, pname: GLenum, param: GLint)
use @glFramebufferReadBufferEXT[None](framebuffer: GLuint, mode: GLenum)
use @glFramebufferRenderbuffer[None](target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)
use @glFramebufferSampleLocationsfvARB[None](target: GLenum, start: GLuint, count: GLsizei, v: Pointer[GLfloat] tag)
use @glFramebufferSampleLocationsfvNV[None](target: GLenum, start: GLuint, count: GLsizei, v: Pointer[GLfloat] tag)
use @glFramebufferTexture1D[None](target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
use @glFramebufferTexture2D[None](target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
use @glFramebufferTexture3D[None](target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint)
use @glFramebufferTextureARB[None](target: GLenum, attachment: GLenum, texture: GLuint, level: GLint)
use @glFramebufferTextureFaceARB[None](target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum)
use @glFramebufferTextureLayerARB[None](target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
use @glFramebufferTextureLayer[None](target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
use @glFramebufferTextureMultiviewOVR[None](target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, baseViewIndex: GLint, numViews: GLsizei)
use @glFramebufferTexture[None](target: GLenum, attachment: GLenum, texture: GLuint, level: GLint)
use @glFrontFace[None](mode: GLenum)
use @glGenBuffers[None](n: GLsizei, buffers: Pointer[GLuint] tag)
use @glGenFramebuffers[None](n: GLsizei, framebuffers: Pointer[GLuint] tag)
use @glGenPathsNV[GLuint](range: GLsizei)
use @glGenPerfMonitorsAMD[None](n: GLsizei, monitors: Pointer[GLuint] tag)
use @glGenProgramPipelines[None](n: GLsizei, pipelines: Pointer[GLuint] tag)
use @glGenQueries[None](n: GLsizei, ids: Pointer[GLuint] tag)
use @glGenRenderbuffers[None](n: GLsizei, renderbuffers: Pointer[GLuint] tag)
use @glGenSamplers[None](count: GLsizei, samplers: Pointer[GLuint] tag)
use @glGenTextures[None](n: GLsizei, textures: Pointer[GLuint] tag)
use @glGenTransformFeedbacks[None](n: GLsizei, ids: Pointer[GLuint] tag)
use @glGenVertexArrays[None](n: GLsizei, arrays: Pointer[GLuint] tag)
use @glGenerateMipmap[None](target: GLenum)
use @glGenerateMultiTexMipmapEXT[None](texunit: GLenum, target: GLenum)
use @glGenerateTextureMipmapEXT[None](texture: GLuint, target: GLenum)
use @glGenerateTextureMipmap[None](texture: GLuint)
use @glGetActiveAtomicCounterBufferiv[None](program: GLuint, bufferIndex: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetActiveAttrib[None](program: GLuint, index: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, size: Pointer[GLint] tag, type': Pointer[GLenum] tag, name: Pointer[GLchar] tag)
use @glGetActiveSubroutineName[None](program: GLuint, shadertype': GLenum, index: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, name: Pointer[GLchar] tag)
use @glGetActiveSubroutineUniformName[None](program: GLuint, shadertype': GLenum, index: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, name: Pointer[GLchar] tag)
use @glGetActiveSubroutineUniformiv[None](program: GLuint, shadertype': GLenum, index: GLuint, pname: GLenum, values: Pointer[GLint] tag)
use @glGetActiveUniformBlockName[None](program: GLuint, uniformBlockIndex: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, uniformBlockName: Pointer[GLchar] tag)
use @glGetActiveUniformBlockiv[None](program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetActiveUniformName[None](program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, uniformName: Pointer[GLchar] tag)
use @glGetActiveUniform[None](program: GLuint, index: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, size: Pointer[GLint] tag, type': Pointer[GLenum] tag, name: Pointer[GLchar] tag)
use @glGetActiveUniformsiv[None](program: GLuint, uniformCount: GLsizei, uniformIndices: Pointer[GLuint] tag, pname: GLenum, params: Pointer[GLint] tag)
use @glGetAttachedShaders[None](program: GLuint, maxCount: GLsizei, count: Pointer[GLsizei] tag, shaders: Pointer[GLuint] tag)
use @glGetAttribLocation[GLint](program: GLuint, name: Pointer[GLchar] tag)
use @glGetBooleanIndexedvEXT[None](target: GLenum, index: GLuint, data: Pointer[GLboolean] tag)
use @glGetBooleani_v[None](target: GLenum, index: GLuint, data: Pointer[GLboolean] tag)
use @glGetBooleanv[None](pname: GLenum, data: Pointer[GLboolean] tag)
use @glGetBufferParameteri64v[None](target: GLenum, pname: GLenum, params: Pointer[GLint64] tag)
use @glGetBufferParameteriv[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetBufferParameterui64vNV[None](target: GLenum, pname: GLenum, params: Pointer[GLuint64EXT] tag)
use @glGetBufferSubData[None](target: GLenum, offset: GLintptr, size: GLsizeiptr, data: Pointer[None])
use @glGetCommandHeaderNV[GLuint](tokenID: GLenum, size: GLuint)
use @glGetCompressedMultiTexImageEXT[None](texunit: GLenum, target: GLenum, lod: GLint, img: Pointer[None])
use @glGetCompressedTexImage[None](target: GLenum, level: GLint, img: Pointer[None])
use @glGetCompressedTextureImageEXT[None](texture: GLuint, target: GLenum, lod: GLint, img: Pointer[None])
use @glGetCompressedTextureImage[None](texture: GLuint, level: GLint, bufSize: GLsizei, pixels: Pointer[None])
use @glGetCompressedTextureSubImage[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, bufSize: GLsizei, pixels: Pointer[None])
use @glGetCoverageModulationTableNV[None](bufSize: GLsizei, v: Pointer[GLfloat] tag)
use @glGetDebugMessageLogARB[GLuint](count: GLuint, bufSize: GLsizei, sources: Pointer[GLenum] tag, types: Pointer[GLenum] tag, ids: Pointer[GLuint] tag, severities: Pointer[GLenum] tag, lengths: Pointer[GLsizei] tag, messageLog: Pointer[GLchar] tag)
use @glGetDebugMessageLog[GLuint](count: GLuint, bufSize: GLsizei, sources: Pointer[GLenum] tag, types: Pointer[GLenum] tag, ids: Pointer[GLuint] tag, severities: Pointer[GLenum] tag, lengths: Pointer[GLsizei] tag, messageLog: Pointer[GLchar] tag)
use @glGetDoubleIndexedvEXT[None](target: GLenum, index: GLuint, data: Pointer[GLdouble] tag)
use @glGetDoublei_vEXT[None](pname: GLenum, index: GLuint, params: Pointer[GLdouble] tag)
use @glGetDoublei_v[None](target: GLenum, index: GLuint, data: Pointer[GLdouble] tag)
use @glGetDoublev[None](pname: GLenum, data: Pointer[GLdouble] tag)
use @glGetError[GLenum]()
use @glGetFirstPerfQueryIdINTEL[None](queryId: Pointer[GLuint] tag)
use @glGetFloatIndexedvEXT[None](target: GLenum, index: GLuint, data: Pointer[GLfloat] tag)
use @glGetFloati_vEXT[None](pname: GLenum, index: GLuint, params: Pointer[GLfloat] tag)
use @glGetFloati_v[None](target: GLenum, index: GLuint, data: Pointer[GLfloat] tag)
use @glGetFloatv[None](pname: GLenum, data: Pointer[GLfloat] tag)
use @glGetFragDataIndex[GLint](program: GLuint, name: Pointer[GLchar] tag)
use @glGetFragDataLocation[GLint](program: GLuint, name: Pointer[GLchar] tag)
use @glGetFramebufferAttachmentParameteriv[None](target: GLenum, attachment: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetFramebufferParameterivEXT[None](framebuffer: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetFramebufferParameterivMESA[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetFramebufferParameteriv[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetGraphicsResetStatusARB[GLenum]()
use @glGetGraphicsResetStatus[GLenum]()
use @glGetImageHandleARB[GLuint64](texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum)
use @glGetImageHandleNV[GLuint64](texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, format: GLenum)
use @glGetInteger64i_v[None](target: GLenum, index: GLuint, data: Pointer[GLint64] tag)
use @glGetInteger64v[None](pname: GLenum, data: Pointer[GLint64] tag)
use @glGetIntegerIndexedvEXT[None](target: GLenum, index: GLuint, data: Pointer[GLint] tag)
use @glGetIntegeri_v[None](target: GLenum, index: GLuint, data: Pointer[GLint] tag)
use @glGetIntegerui64i_vNV[None](value: GLenum, index: GLuint, result: Pointer[GLuint64EXT] tag)
use @glGetIntegerui64vNV[None](value: GLenum, result: Pointer[GLuint64EXT] tag)
use @glGetIntegerv[None](pname: GLenum, data: Pointer[GLint] tag)
use @glGetInternalformatSampleivNV[None](target: GLenum, internalformat: GLenum, samples: GLsizei, pname: GLenum, count: GLsizei, params: Pointer[GLint] tag)
use @glGetInternalformati64v[None](target: GLenum, internalformat: GLenum, pname: GLenum, count: GLsizei, params: Pointer[GLint64] tag)
use @glGetInternalformativ[None](target: GLenum, internalformat: GLenum, pname: GLenum, count: GLsizei, params: Pointer[GLint] tag)
use @glGetMemoryObjectDetachedResourcesuivNV[None](memory: GLuint, pname: GLenum, first: GLint, count: GLsizei, params: Pointer[GLuint] tag)
use @glGetMultiTexEnvfvEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetMultiTexEnvivEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetMultiTexGendvEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, params: Pointer[GLdouble] tag)
use @glGetMultiTexGenfvEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetMultiTexGenivEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetMultiTexImageEXT[None](texunit: GLenum, target: GLenum, level: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glGetMultiTexLevelParameterfvEXT[None](texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetMultiTexLevelParameterivEXT[None](texunit: GLenum, target: GLenum, level: GLint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetMultiTexParameterIivEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetMultiTexParameterIuivEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLuint] tag)
use @glGetMultiTexParameterfvEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetMultiTexParameterivEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetMultisamplefv[None](pname: GLenum, index: GLuint, val': Pointer[GLfloat] tag)
use @glGetNamedBufferParameteri64v[None](buffer: GLuint, pname: GLenum, params: Pointer[GLint64] tag)
use @glGetNamedBufferParameterivEXT[None](buffer: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNamedBufferParameteriv[None](buffer: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNamedBufferParameterui64vNV[None](buffer: GLuint, pname: GLenum, params: Pointer[GLuint64EXT] tag)
use @glGetNamedBufferSubDataEXT[None](buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: Pointer[None])
use @glGetNamedBufferSubData[None](buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: Pointer[None])
use @glGetNamedFramebufferAttachmentParameterivEXT[None](framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNamedFramebufferAttachmentParameteriv[None](framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNamedFramebufferParameterivEXT[None](framebuffer: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNamedFramebufferParameteriv[None](framebuffer: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glGetNamedProgramLocalParameterIivEXT[None](program: GLuint, target: GLenum, index: GLuint, params: Pointer[GLint] tag)
use @glGetNamedProgramLocalParameterIuivEXT[None](program: GLuint, target: GLenum, index: GLuint, params: Pointer[GLuint] tag)
use @glGetNamedProgramLocalParameterdvEXT[None](program: GLuint, target: GLenum, index: GLuint, params: Pointer[GLdouble] tag)
use @glGetNamedProgramLocalParameterfvEXT[None](program: GLuint, target: GLenum, index: GLuint, params: Pointer[GLfloat] tag)
use @glGetNamedProgramStringEXT[None](program: GLuint, target: GLenum, pname: GLenum, string: Pointer[None])
use @glGetNamedProgramivEXT[None](program: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNamedRenderbufferParameterivEXT[None](renderbuffer: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNamedRenderbufferParameteriv[None](renderbuffer: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNamedStringARB[None](namelen: GLint, name: Pointer[GLchar] tag, bufSize: GLsizei, stringlen: Pointer[GLint] tag, string: Pointer[GLchar] tag)
use @glGetNamedStringivARB[None](namelen: GLint, name: Pointer[GLchar] tag, pname: GLenum, params: Pointer[GLint] tag)
use @glGetNextPerfQueryIdINTEL[None](queryId: GLuint, nextQueryId: Pointer[GLuint] tag)
use @glGetObjectLabelEXT[None](type': GLenum, object': GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, label: Pointer[GLchar] tag)
use @glGetObjectLabel[None](identifier: GLenum, name: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, label: Pointer[GLchar] tag)
use @glGetObjectPtrLabel[None](ptr: Pointer[None], bufSize: GLsizei, length: Pointer[GLsizei] tag, label: Pointer[GLchar] tag)
use @glGetPathCommandsNV[None](path: GLuint, commands: Pointer[GLubyte] tag)
use @glGetPathCoordsNV[None](path: GLuint, coords: Pointer[GLfloat] tag)
use @glGetPathDashArrayNV[None](path: GLuint, dashArray: Pointer[GLfloat] tag)
use @glGetPathLengthNV[GLfloat](path: GLuint, startSegment: GLsizei, numSegments: GLsizei)
use @glGetPathMetricRangeNV[None](metricQueryMask: GLbitfield, firstPathName: GLuint, numPaths: GLsizei, stride: GLsizei, metrics: Pointer[GLfloat] tag)
use @glGetPathMetricsNV[None](metricQueryMask: GLbitfield, numPaths: GLsizei, pathNametype': GLenum, paths: Pointer[None], pathBase: GLuint, stride: GLsizei, metrics: Pointer[GLfloat] tag)
use @glGetPathParameterfvNV[None](path: GLuint, pname: GLenum, value: Pointer[GLfloat] tag)
use @glGetPathParameterivNV[None](path: GLuint, pname: GLenum, value: Pointer[GLint] tag)
use @glGetPathSpacingNV[None](pathListMode: GLenum, numPaths: GLsizei, pathNametype': GLenum, paths: Pointer[None], pathBase: GLuint, advanceScale: GLfloat, kerningScale: GLfloat, transformtype': GLenum, returnedSpacing: Pointer[GLfloat] tag)
use @glGetPerfCounterInfoINTEL[None](queryId: GLuint, counterId: GLuint, counterNameLength: GLuint, counterName: Pointer[GLchar] tag, counterDescLength: GLuint, counterDesc: Pointer[GLchar] tag, counterOffset: Pointer[GLuint] tag, counterDataSize: Pointer[GLuint] tag, counterTypeEnum: Pointer[GLuint] tag, counterDataTypeEnum: Pointer[GLuint] tag, rawCounterMaxValue: Pointer[GLuint64] tag)
use @glGetPerfMonitorCounterDataAMD[None](monitor: GLuint, pname: GLenum, dataSize: GLsizei, data: Pointer[GLuint] tag, bytesWritten: Pointer[GLint] tag)
use @glGetPerfMonitorCounterInfoAMD[None](group: GLuint, counter: GLuint, pname: GLenum, data: Pointer[None])
use @glGetPerfMonitorCounterStringAMD[None](group: GLuint, counter: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, counterString: Pointer[GLchar] tag)
use @glGetPerfMonitorCountersAMD[None](group: GLuint, numCounters: Pointer[GLint] tag, maxActiveCounters: Pointer[GLint] tag, counterSize: GLsizei, counters: Pointer[GLuint] tag)
use @glGetPerfMonitorGroupStringAMD[None](group: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, groupString: Pointer[GLchar] tag)
use @glGetPerfMonitorGroupsAMD[None](numGroups: Pointer[GLint] tag, groupsSize: GLsizei, groups: Pointer[GLuint] tag)
use @glGetPerfQueryDataINTEL[None](queryHandle: GLuint, flags: GLuint, dataSize: GLsizei, data: Pointer[None], bytesWritten: Pointer[GLuint] tag)
use @glGetPerfQueryIdByNameINTEL[None](queryName: Pointer[GLchar] tag, queryId: Pointer[GLuint] tag)
use @glGetPerfQueryInfoINTEL[None](queryId: GLuint, queryNameLength: GLuint, queryName: Pointer[GLchar] tag, dataSize: Pointer[GLuint] tag, noCounters: Pointer[GLuint] tag, noInstances: Pointer[GLuint] tag, capsMask: Pointer[GLuint] tag)
use @glGetProgramBinary[None](program: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, binaryFormat: Pointer[GLenum] tag, binary: Pointer[None])
use @glGetProgramInfoLog[None](program: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, infoLog: Pointer[GLchar] tag)
use @glGetProgramInterfaceiv[None](program: GLuint, programInterface: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetProgramPipelineInfoLog[None](pipeline: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, infoLog: Pointer[GLchar] tag)
use @glGetProgramPipelineiv[None](pipeline: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetProgramResourceIndex[GLuint](program: GLuint, programInterface: GLenum, name: Pointer[GLchar] tag)
use @glGetProgramResourceLocationIndex[GLint](program: GLuint, programInterface: GLenum, name: Pointer[GLchar] tag)
use @glGetProgramResourceLocation[GLint](program: GLuint, programInterface: GLenum, name: Pointer[GLchar] tag)
use @glGetProgramResourceName[None](program: GLuint, programInterface: GLenum, index: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, name: Pointer[GLchar] tag)
use @glGetProgramResourcefvNV[None](program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: Pointer[GLenum] tag, count: GLsizei, length: Pointer[GLsizei] tag, params: Pointer[GLfloat] tag)
use @glGetProgramResourceiv[None](program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: Pointer[GLenum] tag, count: GLsizei, length: Pointer[GLsizei] tag, params: Pointer[GLint] tag)
use @glGetProgramStageiv[None](program: GLuint, shadertype': GLenum, pname: GLenum, values: Pointer[GLint] tag)
use @glGetProgramiv[None](program: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetQueryBufferObjecti64v[None](id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr)
use @glGetQueryBufferObjectiv[None](id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr)
use @glGetQueryBufferObjectui64v[None](id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr)
use @glGetQueryBufferObjectuiv[None](id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr)
use @glGetQueryIndexediv[None](target: GLenum, index: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetQueryObjecti64v[None](id: GLuint, pname: GLenum, params: Pointer[GLint64] tag)
use @glGetQueryObjectiv[None](id: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetQueryObjectui64v[None](id: GLuint, pname: GLenum, params: Pointer[GLuint64] tag)
use @glGetQueryObjectuiv[None](id: GLuint, pname: GLenum, params: Pointer[GLuint] tag)
use @glGetQueryiv[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetRenderbufferParameteriv[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetSamplerParameterIiv[None](sampler: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetSamplerParameterIuiv[None](sampler: GLuint, pname: GLenum, params: Pointer[GLuint] tag)
use @glGetSamplerParameterfv[None](sampler: GLuint, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetSamplerParameteriv[None](sampler: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetShaderInfoLog[None](shader: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, infoLog: Pointer[GLchar] tag)
use @glGetShaderPrecisionFormat[None](shadertype': GLenum, precisiontype': GLenum, range: Pointer[GLint] tag, precision: Pointer[GLint] tag)
use @glGetShaderSource[None](shader: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, source: Pointer[GLchar] tag)
use @glGetShaderiv[None](shader: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetShadingRateImagePaletteNV[None](viewport: GLuint, entry: GLuint, rate: Pointer[GLenum] tag)
use @glGetShadingRateSampleLocationivNV[None](rate: GLenum, samples: GLuint, index: GLuint, location: Pointer[GLint] tag)
use @glGetStageIndexNV[GLushort](shadertype': GLenum)
use @glGetSubroutineIndex[GLuint](program: GLuint, shadertype': GLenum, name: Pointer[GLchar] tag)
use @glGetSubroutineUniformLocation[GLint](program: GLuint, shadertype': GLenum, name: Pointer[GLchar] tag)
use @glGetSynciv[None](sync: GLsync, pname: GLenum, count: GLsizei, length: Pointer[GLsizei] tag, values: Pointer[GLint] tag)
use @glGetTexImage[None](target: GLenum, level: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glGetTexLevelParameterfv[None](target: GLenum, level: GLint, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetTexLevelParameteriv[None](target: GLenum, level: GLint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTexParameterIiv[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTexParameterIuiv[None](target: GLenum, pname: GLenum, params: Pointer[GLuint] tag)
use @glGetTexParameterfv[None](target: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetTexParameteriv[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTextureHandleARB[GLuint64](texture: GLuint)
use @glGetTextureHandleNV[GLuint64](texture: GLuint)
use @glGetTextureImageEXT[None](texture: GLuint, target: GLenum, level: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glGetTextureImage[None](texture: GLuint, level: GLint, format: GLenum, type': GLenum, bufSize: GLsizei, pixels: Pointer[None])
use @glGetTextureLevelParameterfvEXT[None](texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetTextureLevelParameterfv[None](texture: GLuint, level: GLint, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetTextureLevelParameterivEXT[None](texture: GLuint, target: GLenum, level: GLint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTextureLevelParameteriv[None](texture: GLuint, level: GLint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTextureParameterIivEXT[None](texture: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTextureParameterIiv[None](texture: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTextureParameterIuivEXT[None](texture: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLuint] tag)
use @glGetTextureParameterIuiv[None](texture: GLuint, pname: GLenum, params: Pointer[GLuint] tag)
use @glGetTextureParameterfvEXT[None](texture: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetTextureParameterfv[None](texture: GLuint, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetTextureParameterivEXT[None](texture: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTextureParameteriv[None](texture: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetTextureSamplerHandleARB[GLuint64](texture: GLuint, sampler: GLuint)
use @glGetTextureSamplerHandleNV[GLuint64](texture: GLuint, sampler: GLuint)
use @glGetTextureSubImage[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type': GLenum, bufSize: GLsizei, pixels: Pointer[None])
use @glGetTransformFeedbackVarying[None](program: GLuint, index: GLuint, bufSize: GLsizei, length: Pointer[GLsizei] tag, size: Pointer[GLsizei] tag, type': Pointer[GLenum] tag, name: Pointer[GLchar] tag)
use @glGetTransformFeedbacki64_v[None](xfb: GLuint, pname: GLenum, index: GLuint, param: Pointer[GLint64] tag)
use @glGetTransformFeedbacki_v[None](xfb: GLuint, pname: GLenum, index: GLuint, param: Pointer[GLint] tag)
use @glGetTransformFeedbackiv[None](xfb: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glGetUniformBlockIndex[GLuint](program: GLuint, uniformBlockName: Pointer[GLchar] tag)
use @glGetUniformIndices[None](program: GLuint, uniformCount: GLsizei, uniformNames: Pointer[GLchar] tag, uniformIndices: Pointer[GLuint] tag)
use @glGetUniformLocation[GLint](program: GLuint, name: Pointer[GLchar] tag)
use @glGetUniformSubroutineuiv[None](shadertype': GLenum, location: GLint, params: Pointer[GLuint] tag)
use @glGetUniformdv[None](program: GLuint, location: GLint, params: Pointer[GLdouble] tag)
use @glGetUniformfv[None](program: GLuint, location: GLint, params: Pointer[GLfloat] tag)
use @glGetUniformi64vARB[None](program: GLuint, location: GLint, params: Pointer[GLint64] tag)
use @glGetUniformi64vNV[None](program: GLuint, location: GLint, params: Pointer[GLint64EXT] tag)
use @glGetUniformiv[None](program: GLuint, location: GLint, params: Pointer[GLint] tag)
use @glGetUniformui64vARB[None](program: GLuint, location: GLint, params: Pointer[GLuint64] tag)
use @glGetUniformui64vNV[None](program: GLuint, location: GLint, params: Pointer[GLuint64EXT] tag)
use @glGetUniformuiv[None](program: GLuint, location: GLint, params: Pointer[GLuint] tag)
use @glGetVertexArrayIndexed64iv[None](vaobj: GLuint, index: GLuint, pname: GLenum, param: Pointer[GLint64] tag)
use @glGetVertexArrayIndexediv[None](vaobj: GLuint, index: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glGetVertexArrayIntegeri_vEXT[None](vaobj: GLuint, index: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glGetVertexArrayIntegervEXT[None](vaobj: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glGetVertexArrayiv[None](vaobj: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glGetVertexAttribIiv[None](index: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetVertexAttribIuiv[None](index: GLuint, pname: GLenum, params: Pointer[GLuint] tag)
use @glGetVertexAttribLdv[None](index: GLuint, pname: GLenum, params: Pointer[GLdouble] tag)
use @glGetVertexAttribLi64vNV[None](index: GLuint, pname: GLenum, params: Pointer[GLint64EXT] tag)
use @glGetVertexAttribLui64vARB[None](index: GLuint, pname: GLenum, params: Pointer[GLuint64EXT] tag)
use @glGetVertexAttribLui64vNV[None](index: GLuint, pname: GLenum, params: Pointer[GLuint64EXT] tag)
use @glGetVertexAttribdv[None](index: GLuint, pname: GLenum, params: Pointer[GLdouble] tag)
use @glGetVertexAttribfv[None](index: GLuint, pname: GLenum, params: Pointer[GLfloat] tag)
use @glGetVertexAttribiv[None](index: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glGetVkProcAddrNV[Pointer[None]](name: Pointer[GLchar] tag)
use @glGetnCompressedTexImageARB[None](target: GLenum, lod: GLint, bufSize: GLsizei, img: Pointer[None])
use @glGetnCompressedTexImage[None](target: GLenum, lod: GLint, bufSize: GLsizei, pixels: Pointer[None])
use @glGetnTexImageARB[None](target: GLenum, level: GLint, format: GLenum, type': GLenum, bufSize: GLsizei, img: Pointer[None])
use @glGetnTexImage[None](target: GLenum, level: GLint, format: GLenum, type': GLenum, bufSize: GLsizei, pixels: Pointer[None])
use @glGetnUniformdvARB[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLdouble] tag)
use @glGetnUniformdv[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLdouble] tag)
use @glGetnUniformfvARB[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLfloat] tag)
use @glGetnUniformfv[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLfloat] tag)
use @glGetnUniformi64vARB[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLint64] tag)
use @glGetnUniformivARB[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLint] tag)
use @glGetnUniformiv[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLint] tag)
use @glGetnUniformui64vARB[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLuint64] tag)
use @glGetnUniformuivARB[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLuint] tag)
use @glGetnUniformuiv[None](program: GLuint, location: GLint, bufSize: GLsizei, params: Pointer[GLuint] tag)
use @glHint[None](target: GLenum, mode: GLenum)
use @glIndexFormatNV[None](type': GLenum, stride: GLsizei)
use @glInsertEventMarkerEXT[None](length: GLsizei, marker: Pointer[GLchar] tag)
use @glInterpolatePathsNV[None](resultPath: GLuint, pathA: GLuint, pathB: GLuint, weight: GLfloat)
use @glInvalidateBufferData[None](buffer: GLuint)
use @glInvalidateBufferSubData[None](buffer: GLuint, offset: GLintptr, length: GLsizeiptr)
use @glInvalidateFramebuffer[None](target: GLenum, numAttachments: GLsizei, attachments: Pointer[GLenum] tag)
use @glInvalidateNamedFramebufferData[None](framebuffer: GLuint, numAttachments: GLsizei, attachments: Pointer[GLenum] tag)
use @glInvalidateNamedFramebufferSubData[None](framebuffer: GLuint, numAttachments: GLsizei, attachments: Pointer[GLenum] tag, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glInvalidateSubFramebuffer[None](target: GLenum, numAttachments: GLsizei, attachments: Pointer[GLenum] tag, x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glInvalidateTexImage[None](texture: GLuint, level: GLint)
use @glInvalidateTexSubImage[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei)
use @glIsBufferResidentNV[GLboolean](target: GLenum)
use @glIsBuffer[GLboolean](buffer: GLuint)
use @glIsCommandListNV[GLboolean](list: GLuint)
use @glIsEnabledIndexedEXT[GLboolean](target: GLenum, index: GLuint)
use @glIsEnabled[GLboolean](cap: GLenum)
use @glIsEnabledi[GLboolean](target: GLenum, index: GLuint)
use @glIsFramebuffer[GLboolean](framebuffer: GLuint)
use @glIsImageHandleResidentARB[GLboolean](handle: GLuint64)
use @glIsImageHandleResidentNV[GLboolean](handle: GLuint64)
use @glIsNamedBufferResidentNV[GLboolean](buffer: GLuint)
use @glIsNamedStringARB[GLboolean](namelen: GLint, name: Pointer[GLchar] tag)
use @glIsPathNV[GLboolean](path: GLuint)
use @glIsPointInFillPathNV[GLboolean](path: GLuint, mask: GLuint, x: GLfloat, y: GLfloat)
use @glIsPointInStrokePathNV[GLboolean](path: GLuint, x: GLfloat, y: GLfloat)
use @glIsProgramPipeline[GLboolean](pipeline: GLuint)
use @glIsProgram[GLboolean](program: GLuint)
use @glIsQuery[GLboolean](id: GLuint)
use @glIsRenderbuffer[GLboolean](renderbuffer: GLuint)
use @glIsSampler[GLboolean](sampler: GLuint)
use @glIsShader[GLboolean](shader: GLuint)
use @glIsStateNV[GLboolean](state: GLuint)
use @glIsSync[GLboolean](sync: GLsync)
use @glIsTextureHandleResidentARB[GLboolean](handle: GLuint64)
use @glIsTextureHandleResidentNV[GLboolean](handle: GLuint64)
use @glIsTexture[GLboolean](texture: GLuint)
use @glIsTransformFeedback[GLboolean](id: GLuint)
use @glIsVertexArray[GLboolean](array: GLuint)
use @glLabelObjectEXT[None](type': GLenum, object': GLuint, length: GLsizei, label: Pointer[GLchar] tag)
use @glLineWidth[None](width: GLfloat)
use @glLinkProgram[None](program: GLuint)
use @glListDrawCommandsStatesClientNV[None](list: GLuint, segment: GLuint, indirects: Pointer[Pointer[None] tag] tag, sizes: Pointer[GLsizei] tag, states: Pointer[GLuint] tag, fbos: Pointer[GLuint] tag, count: GLuint)
use @glLogicOp[None](opcode: GLenum)
use @glMakeBufferNonResidentNV[None](target: GLenum)
use @glMakeBufferResidentNV[None](target: GLenum, access: GLenum)
use @glMakeImageHandleNonResidentARB[None](handle: GLuint64)
use @glMakeImageHandleNonResidentNV[None](handle: GLuint64)
use @glMakeImageHandleResidentARB[None](handle: GLuint64, access: GLenum)
use @glMakeImageHandleResidentNV[None](handle: GLuint64, access: GLenum)
use @glMakeNamedBufferNonResidentNV[None](buffer: GLuint)
use @glMakeNamedBufferResidentNV[None](buffer: GLuint, access: GLenum)
use @glMakeTextureHandleNonResidentARB[None](handle: GLuint64)
use @glMakeTextureHandleNonResidentNV[None](handle: GLuint64)
use @glMakeTextureHandleResidentARB[None](handle: GLuint64)
use @glMakeTextureHandleResidentNV[None](handle: GLuint64)
use @glMatrixFrustumEXT[None](mode: GLenum, left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble)
use @glMatrixLoad3x2fNV[None](matrixMode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixLoad3x3fNV[None](matrixMode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixLoadIdentityEXT[None](mode: GLenum)
use @glMatrixLoadTranspose3x3fNV[None](matrixMode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixLoadTransposedEXT[None](mode: GLenum, m: Pointer[GLdouble] tag)
use @glMatrixLoadTransposefEXT[None](mode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixLoaddEXT[None](mode: GLenum, m: Pointer[GLdouble] tag)
use @glMatrixLoadfEXT[None](mode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixMult3x2fNV[None](matrixMode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixMult3x3fNV[None](matrixMode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixMultTranspose3x3fNV[None](matrixMode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixMultTransposedEXT[None](mode: GLenum, m: Pointer[GLdouble] tag)
use @glMatrixMultTransposefEXT[None](mode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixMultdEXT[None](mode: GLenum, m: Pointer[GLdouble] tag)
use @glMatrixMultfEXT[None](mode: GLenum, m: Pointer[GLfloat] tag)
use @glMatrixOrthoEXT[None](mode: GLenum, left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble)
use @glMatrixPopEXT[None](mode: GLenum)
use @glMatrixPushEXT[None](mode: GLenum)
use @glMatrixRotatedEXT[None](mode: GLenum, angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble)
use @glMatrixRotatefEXT[None](mode: GLenum, angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat)
use @glMatrixScaledEXT[None](mode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble)
use @glMatrixScalefEXT[None](mode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat)
use @glMatrixTranslatedEXT[None](mode: GLenum, x: GLdouble, y: GLdouble, z: GLdouble)
use @glMatrixTranslatefEXT[None](mode: GLenum, x: GLfloat, y: GLfloat, z: GLfloat)
use @glMaxShaderCompilerThreadsARB[None](count: GLuint)
use @glMaxShaderCompilerThreadsKHR[None](count: GLuint)
use @glMemoryBarrierByRegion[None](barriers: GLbitfield)
use @glMemoryBarrier[None](barriers: GLbitfield)
use @glMinSampleShadingARB[None](value: GLfloat)
use @glMinSampleShading[None](value: GLfloat)
use @glMultiDrawArraysIndirectBindlessCountNV[None](mode: GLenum, indirect: Pointer[None], drawCount: GLsizei, maxDrawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint)
use @glMultiDrawArraysIndirectBindlessNV[None](mode: GLenum, indirect: Pointer[None], drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint)
use @glMultiDrawArraysIndirectCountARB[None](mode: GLenum, indirect: Pointer[None], drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
use @glMultiDrawArraysIndirectCount[None](mode: GLenum, indirect: Pointer[None], drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
use @glMultiDrawArraysIndirect[None](mode: GLenum, indirect: Pointer[None], drawcount: GLsizei, stride: GLsizei)
use @glMultiDrawArrays[None](mode: GLenum, first: Pointer[GLint] tag, count: Pointer[GLsizei] tag, drawcount: GLsizei)
use @glMultiDrawElementsBaseVertex[None](mode: GLenum, count: Pointer[GLsizei] tag, type': GLenum, indices: Pointer[Pointer[None] tag] tag, drawcount: GLsizei, basevertex: Pointer[GLint] tag)
use @glMultiDrawElementsIndirectBindlessCountNV[None](mode: GLenum, type': GLenum, indirect: Pointer[None], drawCount: GLsizei, maxDrawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint)
use @glMultiDrawElementsIndirectBindlessNV[None](mode: GLenum, type': GLenum, indirect: Pointer[None], drawCount: GLsizei, stride: GLsizei, vertexBufferCount: GLint)
use @glMultiDrawElementsIndirectCountARB[None](mode: GLenum, type': GLenum, indirect: Pointer[None], drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
use @glMultiDrawElementsIndirectCount[None](mode: GLenum, type': GLenum, indirect: Pointer[None], drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
use @glMultiDrawElementsIndirect[None](mode: GLenum, type': GLenum, indirect: Pointer[None], drawcount: GLsizei, stride: GLsizei)
use @glMultiDrawElements[None](mode: GLenum, count: Pointer[GLsizei] tag, type': GLenum, indices: Pointer[Pointer[None] tag] tag, drawcount: GLsizei)
use @glMultiDrawMeshTasksIndirectCountNV[None](indirect: GLintptr, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei)
use @glMultiDrawMeshTasksIndirectNV[None](indirect: GLintptr, drawcount: GLsizei, stride: GLsizei)
use @glMultiTexBufferEXT[None](texunit: GLenum, target: GLenum, internalformat: GLenum, buffer: GLuint)
use @glMultiTexCoordPointerEXT[None](texunit: GLenum, size: GLint, type': GLenum, stride: GLsizei, pointer: Pointer[None])
use @glMultiTexEnvfEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat)
use @glMultiTexEnvfvEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glMultiTexEnviEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, param: GLint)
use @glMultiTexEnvivEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glMultiTexGendEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, param: GLdouble)
use @glMultiTexGendvEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, params: Pointer[GLdouble] tag)
use @glMultiTexGenfEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, param: GLfloat)
use @glMultiTexGenfvEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glMultiTexGeniEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, param: GLint)
use @glMultiTexGenivEXT[None](texunit: GLenum, coord: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glMultiTexImage1DEXT[None](texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glMultiTexImage2DEXT[None](texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glMultiTexImage3DEXT[None](texunit: GLenum, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glMultiTexParameterIivEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glMultiTexParameterIuivEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLuint] tag)
use @glMultiTexParameterfEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, param: GLfloat)
use @glMultiTexParameterfvEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glMultiTexParameteriEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, param: GLint)
use @glMultiTexParameterivEXT[None](texunit: GLenum, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glMultiTexRenderbufferEXT[None](texunit: GLenum, target: GLenum, renderbuffer: GLuint)
use @glMultiTexSubImage1DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glMultiTexSubImage2DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glMultiTexSubImage3DEXT[None](texunit: GLenum, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glNamedBufferAttachMemoryNV[None](buffer: GLuint, memory: GLuint, offset: GLuint64)
use @glNamedBufferDataEXT[None](buffer: GLuint, size: GLsizeiptr, data: Pointer[None], usage: GLenum)
use @glNamedBufferData[None](buffer: GLuint, size: GLsizeiptr, data: Pointer[None], usage: GLenum)
use @glNamedBufferPageCommitmentARB[None](buffer: GLuint, offset: GLintptr, size: GLsizeiptr, commit: GLboolean)
use @glNamedBufferPageCommitmentEXT[None](buffer: GLuint, offset: GLintptr, size: GLsizeiptr, commit: GLboolean)
use @glNamedBufferPageCommitmentMemNV[None](buffer: GLuint, offset: GLintptr, size: GLsizeiptr, memory: GLuint, memOffset: GLuint64, commit: GLboolean)
use @glNamedBufferStorageEXT[None](buffer: GLuint, size: GLsizeiptr, data: Pointer[None], flags: GLbitfield)
use @glNamedBufferStorage[None](buffer: GLuint, size: GLsizeiptr, data: Pointer[None], flags: GLbitfield)
use @glNamedBufferSubDataEXT[None](buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: Pointer[None])
use @glNamedBufferSubData[None](buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: Pointer[None])
use @glNamedCopyBufferSubDataEXT[None](readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr)
use @glNamedFramebufferDrawBuffer[None](framebuffer: GLuint, buf: GLenum)
use @glNamedFramebufferDrawBuffers[None](framebuffer: GLuint, n: GLsizei, bufs: Pointer[GLenum] tag)
use @glNamedFramebufferParameteriEXT[None](framebuffer: GLuint, pname: GLenum, param: GLint)
use @glNamedFramebufferParameteri[None](framebuffer: GLuint, pname: GLenum, param: GLint)
use @glNamedFramebufferReadBuffer[None](framebuffer: GLuint, src: GLenum)
use @glNamedFramebufferRenderbufferEXT[None](framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)
use @glNamedFramebufferRenderbuffer[None](framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint)
use @glNamedFramebufferSampleLocationsfvARB[None](framebuffer: GLuint, start: GLuint, count: GLsizei, v: Pointer[GLfloat] tag)
use @glNamedFramebufferSampleLocationsfvNV[None](framebuffer: GLuint, start: GLuint, count: GLsizei, v: Pointer[GLfloat] tag)
use @glNamedFramebufferTexture1DEXT[None](framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
use @glNamedFramebufferTexture2DEXT[None](framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint)
use @glNamedFramebufferTexture3DEXT[None](framebuffer: GLuint, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint)
use @glNamedFramebufferTextureEXT[None](framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint)
use @glNamedFramebufferTextureFaceEXT[None](framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, face: GLenum)
use @glNamedFramebufferTextureLayerEXT[None](framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
use @glNamedFramebufferTextureLayer[None](framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint)
use @glNamedFramebufferTexture[None](framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint)
use @glNamedProgramLocalParameter4dEXT[None](program: GLuint, target: GLenum, index0: GLuint, x1: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
use @glNamedProgramLocalParameter4dvEXT[None](program: GLuint, target: GLenum, index: GLuint, params: Pointer[GLdouble] tag)
use @glNamedProgramLocalParameter4fEXT[None](program: GLuint, target: GLenum, index0: GLuint, x1: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
use @glNamedProgramLocalParameter4fvEXT[None](program: GLuint, target: GLenum, index: GLuint, params: Pointer[GLfloat] tag)
use @glNamedProgramLocalParameterI4iEXT[None](program: GLuint, target: GLenum, index0: GLuint, x1: GLint, y: GLint, z: GLint, w: GLint)
use @glNamedProgramLocalParameterI4ivEXT[None](program: GLuint, target: GLenum, index: GLuint, params: Pointer[GLint] tag)
use @glNamedProgramLocalParameterI4uiEXT[None](program: GLuint, target: GLenum, index0: GLuint, x1: GLuint, y: GLuint, z: GLuint, w: GLuint)
use @glNamedProgramLocalParameterI4uivEXT[None](program: GLuint, target: GLenum, index: GLuint, params: Pointer[GLuint] tag)
use @glNamedProgramLocalParameters4fvEXT[None](program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: Pointer[GLfloat] tag)
use @glNamedProgramLocalParametersI4ivEXT[None](program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: Pointer[GLint] tag)
use @glNamedProgramLocalParametersI4uivEXT[None](program: GLuint, target: GLenum, index: GLuint, count: GLsizei, params: Pointer[GLuint] tag)
use @glNamedProgramStringEXT[None](program: GLuint, target: GLenum, format: GLenum, len: GLsizei, string: Pointer[None])
use @glNamedRenderbufferStorageEXT[None](renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glNamedRenderbufferStorageMultisampleAdvancedAMD[None](renderbuffer: GLuint, samples: GLsizei, storageSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glNamedRenderbufferStorageMultisampleCoverageEXT[None](renderbuffer: GLuint, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glNamedRenderbufferStorageMultisampleEXT[None](renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glNamedRenderbufferStorageMultisample[None](renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glNamedRenderbufferStorage[None](renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glNamedStringARB[None](type': GLenum, namelen: GLint, name: Pointer[GLchar] tag, stringlen: GLint, string: Pointer[GLchar] tag)
use @glNormalFormatNV[None](type': GLenum, stride: GLsizei)
use @glObjectLabel[None](identifier: GLenum, name: GLuint, length: GLsizei, label: Pointer[GLchar] tag)
use @glObjectPtrLabel[None](ptr: Pointer[None], length: GLsizei, label: Pointer[GLchar] tag)
use @glPatchParameterfv[None](pname: GLenum, values: Pointer[GLfloat] tag)
use @glPatchParameteri[None](pname: GLenum, value: GLint)
use @glPathCommandsNV[None](path: GLuint, numCommands: GLsizei, commands: Pointer[GLubyte] tag, numCoords: GLsizei, coordtype': GLenum, coords: Pointer[None])
use @glPathCoordsNV[None](path: GLuint, numCoords: GLsizei, coordtype': GLenum, coords: Pointer[None])
use @glPathCoverDepthFuncNV[None](func: GLenum)
use @glPathDashArrayNV[None](path: GLuint, dashCount: GLsizei, dashArray: Pointer[GLfloat] tag)
use @glPathGlyphIndexArrayNV[GLenum](firstPathName: GLuint, fontTarget: GLenum, fontName: Pointer[None], fontStyle: GLbitfield, firstGlyphIndex: GLuint, numGlyphs: GLsizei, pathParameterTemplate: GLuint, emScale: GLfloat)
use @glPathGlyphIndexRangeNV[GLenum](fontTarget: GLenum, fontName: Pointer[None], fontStyle: GLbitfield, pathParameterTemplate: GLuint, emScale: GLfloat, baseAndCount: Pointer[GLuint] tag)
use @glPathGlyphRangeNV[None](firstPathName: GLuint, fontTarget: GLenum, fontName: Pointer[None], fontStyle: GLbitfield, firstGlyph: GLuint, numGlyphs: GLsizei, handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat)
use @glPathGlyphsNV[None](firstPathName: GLuint, fontTarget: GLenum, fontName: Pointer[None], fontStyle: GLbitfield, numGlyphs: GLsizei, type': GLenum, charcodes: Pointer[None], handleMissingGlyphs: GLenum, pathParameterTemplate: GLuint, emScale: GLfloat)
use @glPathMemoryGlyphIndexArrayNV[GLenum](firstPathName: GLuint, fontTarget: GLenum, fontSize: GLsizeiptr, fontData: Pointer[None], faceIndex: GLsizei, firstGlyphIndex: GLuint, numGlyphs: GLsizei, pathParameterTemplate: GLuint, emScale: GLfloat)
use @glPathParameterfNV[None](path: GLuint, pname: GLenum, value: GLfloat)
use @glPathParameterfvNV[None](path: GLuint, pname: GLenum, value: Pointer[GLfloat] tag)
use @glPathParameteriNV[None](path: GLuint, pname: GLenum, value: GLint)
use @glPathParameterivNV[None](path: GLuint, pname: GLenum, value: Pointer[GLint] tag)
use @glPathStencilDepthOffsetNV[None](factor: GLfloat, units: GLfloat)
use @glPathStencilFuncNV[None](func: GLenum, ref': GLint, mask: GLuint)
use @glPathStringNV[None](path: GLuint, format: GLenum, length: GLsizei, pathString: Pointer[None])
use @glPathSubCommandsNV[None](path: GLuint, commandStart: GLsizei, commandsToDelete: GLsizei, numCommands: GLsizei, commands: Pointer[GLubyte] tag, numCoords: GLsizei, coordtype': GLenum, coords: Pointer[None])
use @glPathSubCoordsNV[None](path: GLuint, coordStart: GLsizei, numCoords: GLsizei, coordtype': GLenum, coords: Pointer[None])
use @glPauseTransformFeedback[None]()
use @glPixelStoref[None](pname: GLenum, param: GLfloat)
use @glPixelStorei[None](pname: GLenum, param: GLint)
use @glPointAlongPathNV[GLboolean](path: GLuint, startSegment: GLsizei, numSegments: GLsizei, distance: GLfloat, x: Pointer[GLfloat] tag, y: Pointer[GLfloat] tag, tangentX: Pointer[GLfloat] tag, tangentY: Pointer[GLfloat] tag)
use @glPointParameterf[None](pname: GLenum, param: GLfloat)
use @glPointParameterfv[None](pname: GLenum, params: Pointer[GLfloat] tag)
use @glPointParameteri[None](pname: GLenum, param: GLint)
use @glPointParameteriv[None](pname: GLenum, params: Pointer[GLint] tag)
use @glPointSize[None](size: GLfloat)
use @glPolygonMode[None](face: GLenum, mode: GLenum)
use @glPolygonOffsetClampEXT[None](factor: GLfloat, units: GLfloat, clamp: GLfloat)
use @glPolygonOffsetClamp[None](factor: GLfloat, units: GLfloat, clamp: GLfloat)
use @glPolygonOffset[None](factor: GLfloat, units: GLfloat)
use @glPopDebugGroup[None]()
use @glPopGroupMarkerEXT[None]()
use @glPrimitiveBoundingBoxARB[None](minX: GLfloat, minY: GLfloat, minZ: GLfloat, minW: GLfloat, maxX: GLfloat, maxY: GLfloat, maxZ: GLfloat, maxW: GLfloat)
use @glPrimitiveRestartIndex[None](index: GLuint)
use @glProgramBinary[None](program: GLuint, binaryFormat: GLenum, binary: Pointer[None], length: GLsizei)
use @glProgramParameteriARB[None](program: GLuint, pname: GLenum, value: GLint)
use @glProgramParameteri[None](program: GLuint, pname: GLenum, value: GLint)
use @glProgramPathFragmentInputGenNV[None](program: GLuint, location: GLint, genMode: GLenum, components: GLint, coeffs: Pointer[GLfloat] tag)
use @glProgramUniform1dEXT[None](program: GLuint, location: GLint, x: GLdouble)
use @glProgramUniform1d[None](program: GLuint, location: GLint, v: GLdouble)
use @glProgramUniform1dvEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glProgramUniform1dv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glProgramUniform1fEXT[None](program: GLuint, location: GLint, v: GLfloat)
use @glProgramUniform1f[None](program: GLuint, location: GLint, v: GLfloat)
use @glProgramUniform1fvEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glProgramUniform1fv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glProgramUniform1i64ARB[None](program: GLuint, location: GLint, x: GLint64)
use @glProgramUniform1i64NV[None](program: GLuint, location: GLint, x: GLint64EXT)
use @glProgramUniform1i64vARB[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint64] tag)
use @glProgramUniform1i64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint64EXT] tag)
use @glProgramUniform1iEXT[None](program: GLuint, location: GLint, v: GLint)
use @glProgramUniform1i[None](program: GLuint, location: GLint, v: GLint)
use @glProgramUniform1ivEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glProgramUniform1iv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glProgramUniform1ui64ARB[None](program: GLuint, location: GLint, x: GLuint64)
use @glProgramUniform1ui64NV[None](program: GLuint, location: GLint, x: GLuint64EXT)
use @glProgramUniform1ui64vARB[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glProgramUniform1ui64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glProgramUniform1uiEXT[None](program: GLuint, location: GLint, v: GLuint)
use @glProgramUniform1ui[None](program: GLuint, location: GLint, v: GLuint)
use @glProgramUniform1uivEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glProgramUniform1uiv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glProgramUniform2dEXT[None](program: GLuint, location: GLint, x: GLdouble, y: GLdouble)
use @glProgramUniform2d[None](program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble)
use @glProgramUniform2dvEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glProgramUniform2dv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glProgramUniform2fEXT[None](program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat)
use @glProgramUniform2f[None](program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat)
use @glProgramUniform2fvEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glProgramUniform2fv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glProgramUniform2i64ARB[None](program: GLuint, location: GLint, x: GLint64, y: GLint64)
use @glProgramUniform2i64NV[None](program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT)
use @glProgramUniform2i64vARB[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint64] tag)
use @glProgramUniform2i64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint64EXT] tag)
use @glProgramUniform2iEXT[None](program: GLuint, location: GLint, v0: GLint, v1: GLint)
use @glProgramUniform2i[None](program: GLuint, location: GLint, v0: GLint, v1: GLint)
use @glProgramUniform2ivEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glProgramUniform2iv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glProgramUniform2ui64ARB[None](program: GLuint, location: GLint, x: GLuint64, y: GLuint64)
use @glProgramUniform2ui64NV[None](program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT)
use @glProgramUniform2ui64vARB[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glProgramUniform2ui64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glProgramUniform2uiEXT[None](program: GLuint, location: GLint, v0: GLuint, v1: GLuint)
use @glProgramUniform2ui[None](program: GLuint, location: GLint, v0: GLuint, v1: GLuint)
use @glProgramUniform2uivEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glProgramUniform2uiv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glProgramUniform3dEXT[None](program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble)
use @glProgramUniform3d[None](program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble)
use @glProgramUniform3dvEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glProgramUniform3dv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glProgramUniform3fEXT[None](program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat)
use @glProgramUniform3f[None](program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat)
use @glProgramUniform3fvEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glProgramUniform3fv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glProgramUniform3i64ARB[None](program: GLuint, location: GLint, x: GLint64, y: GLint64, z: GLint64)
use @glProgramUniform3i64NV[None](program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT)
use @glProgramUniform3i64vARB[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint64] tag)
use @glProgramUniform3i64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint64EXT] tag)
use @glProgramUniform3iEXT[None](program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint)
use @glProgramUniform3i[None](program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint)
use @glProgramUniform3ivEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glProgramUniform3iv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glProgramUniform3ui64ARB[None](program: GLuint, location: GLint, x: GLuint64, y: GLuint64, z: GLuint64)
use @glProgramUniform3ui64NV[None](program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT)
use @glProgramUniform3ui64vARB[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glProgramUniform3ui64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glProgramUniform3uiEXT[None](program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint)
use @glProgramUniform3ui[None](program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint)
use @glProgramUniform3uivEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glProgramUniform3uiv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glProgramUniform4dEXT[None](program: GLuint, location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
use @glProgramUniform4d[None](program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble, v3: GLdouble)
use @glProgramUniform4dvEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glProgramUniform4dv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glProgramUniform4fEXT[None](program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat)
use @glProgramUniform4f[None](program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat)
use @glProgramUniform4fvEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glProgramUniform4fv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glProgramUniform4i64ARB[None](program: GLuint, location: GLint, x: GLint64, y: GLint64, z: GLint64, w: GLint64)
use @glProgramUniform4i64NV[None](program: GLuint, location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT)
use @glProgramUniform4i64vARB[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint64] tag)
use @glProgramUniform4i64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint64EXT] tag)
use @glProgramUniform4iEXT[None](program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint)
use @glProgramUniform4i[None](program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint)
use @glProgramUniform4ivEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glProgramUniform4iv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glProgramUniform4ui64ARB[None](program: GLuint, location: GLint, x: GLuint64, y: GLuint64, z: GLuint64, w: GLuint64)
use @glProgramUniform4ui64NV[None](program: GLuint, location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT)
use @glProgramUniform4ui64vARB[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glProgramUniform4ui64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glProgramUniform4uiEXT[None](program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint)
use @glProgramUniform4ui[None](program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint)
use @glProgramUniform4uivEXT[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glProgramUniform4uiv[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glProgramUniformHandleui64ARB[None](program: GLuint, location: GLint, value: GLuint64)
use @glProgramUniformHandleui64NV[None](program: GLuint, location: GLint, value: GLuint64)
use @glProgramUniformHandleui64vARB[None](program: GLuint, location: GLint, count: GLsizei, values: Pointer[GLuint64] tag)
use @glProgramUniformHandleui64vNV[None](program: GLuint, location: GLint, count: GLsizei, values: Pointer[GLuint64] tag)
use @glProgramUniformMatrix2dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix2dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix2fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix2fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix2x3dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix2x3dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix2x3fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix2x3fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix2x4dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix2x4dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix2x4fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix2x4fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix3dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix3dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix3fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix3fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix3x2dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix3x2dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix3x2fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix3x2fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix3x4dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix3x4dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix3x4fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix3x4fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix4dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix4dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix4fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix4fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix4x2dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix4x2dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix4x2fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix4x2fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix4x3dvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix4x3dv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glProgramUniformMatrix4x3fvEXT[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformMatrix4x3fv[None](program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glProgramUniformui64NV[None](program: GLuint, location: GLint, value: GLuint64EXT)
use @glProgramUniformui64vNV[None](program: GLuint, location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glProvokingVertex[None](mode: GLenum)
use @glPushClientAttribDefaultEXT[None](mask: GLbitfield)
use @glPushDebugGroup[None](source: GLenum, id: GLuint, length: GLsizei, message: Pointer[GLchar] tag)
use @glPushGroupMarkerEXT[None](length: GLsizei, marker: Pointer[GLchar] tag)
use @glQueryCounter[None](id: GLuint, target: GLenum)
use @glRasterSamplesEXT[None](samples: GLuint, fixedsamplelocations: GLboolean)
use @glReadBuffer[None](src: GLenum)
use @glReadPixels[None](x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glReadnPixelsARB[None](x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type': GLenum, bufSize: GLsizei, data: Pointer[None])
use @glReadnPixels[None](x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type': GLenum, bufSize: GLsizei, data: Pointer[None])
use @glReleaseShaderCompiler[None]()
use @glRenderbufferStorageMultisampleAdvancedAMD[None](target: GLenum, samples: GLsizei, storageSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glRenderbufferStorageMultisampleCoverageNV[None](target: GLenum, coverageSamples: GLsizei, colorSamples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glRenderbufferStorageMultisample[None](target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glRenderbufferStorage[None](target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glResetMemoryObjectParameterNV[None](memory: GLuint, pname: GLenum)
use @glResolveDepthValuesNV[None]()
use @glResumeTransformFeedback[None]()
use @glSampleCoverage[None](value: GLfloat, invert: GLboolean)
use @glSampleMaski[None](maskNumber: GLuint, mask: GLbitfield)
use @glSamplerParameterIiv[None](sampler: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glSamplerParameterIuiv[None](sampler: GLuint, pname: GLenum, param: Pointer[GLuint] tag)
use @glSamplerParameterf[None](sampler: GLuint, pname: GLenum, param: GLfloat)
use @glSamplerParameterfv[None](sampler: GLuint, pname: GLenum, param: Pointer[GLfloat] tag)
use @glSamplerParameteri[None](sampler: GLuint, pname: GLenum, param: GLint)
use @glSamplerParameteriv[None](sampler: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glScissorArrayv[None](first: GLuint, count: GLsizei, v: Pointer[GLint] tag)
use @glScissorExclusiveArrayvNV[None](first: GLuint, count: GLsizei, v: Pointer[GLint] tag)
use @glScissorExclusiveNV[None](x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glScissorIndexed[None](index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei)
use @glScissorIndexedv[None](index: GLuint, v: Pointer[GLint] tag)
use @glScissor[None](x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glSecondaryColorFormatNV[None](size: GLint, type': GLenum, stride: GLsizei)
use @glSelectPerfMonitorCountersAMD[None](monitor: GLuint, enable: GLboolean, group: GLuint, numCounters: GLint, counterList: Pointer[GLuint] tag)
use @glShaderBinary[None](count: GLsizei, shaders: Pointer[GLuint] tag, binaryFormat: GLenum, binary: Pointer[None], length: GLsizei)
use @glShaderSource[None](shader: GLuint, count: GLsizei, string: Pointer[GLchar] tag, length: Pointer[GLint] tag)
use @glShaderStorageBlockBinding[None](program: GLuint, storageBlockIndex: GLuint, storageBlockBinding: GLuint)
use @glShadingRateImageBarrierNV[None](synchronize: GLboolean)
use @glShadingRateImagePaletteNV[None](viewport: GLuint, first: GLuint, count: GLsizei, rates: Pointer[GLenum] tag)
use @glShadingRateSampleOrderCustomNV[None](rate: GLenum, samples: GLuint, locations: Pointer[GLint] tag)
use @glShadingRateSampleOrderNV[None](order: GLenum)
use @glSignalVkFenceNV[None](vkFence: GLuint64)
use @glSignalVkSemaphoreNV[None](vkSemaphore: GLuint64)
use @glSpecializeShaderARB[None](shader: GLuint, pEntryPoint: Pointer[GLchar] tag, numSpecializationConstants: GLuint, pConstantIndex: Pointer[GLuint] tag, pConstantValue: Pointer[GLuint] tag)
use @glSpecializeShader[None](shader: GLuint, pEntryPoint: Pointer[GLchar] tag, numSpecializationConstants: GLuint, pConstantIndex: Pointer[GLuint] tag, pConstantValue: Pointer[GLuint] tag)
use @glStateCaptureNV[None](state: GLuint, mode: GLenum)
use @glStencilFillPathInstancedNV[None](numPaths: GLsizei, pathNametype': GLenum, paths: Pointer[None], pathBase: GLuint, fillMode: GLenum, mask: GLuint, transformtype': GLenum, transformValues: Pointer[GLfloat] tag)
use @glStencilFillPathNV[None](path: GLuint, fillMode: GLenum, mask: GLuint)
use @glStencilFuncSeparate[None](face: GLenum, func: GLenum, ref': GLint, mask: GLuint)
use @glStencilFunc[None](func: GLenum, ref': GLint, mask: GLuint)
use @glStencilMaskSeparate[None](face: GLenum, mask: GLuint)
use @glStencilMask[None](mask: GLuint)
use @glStencilOpSeparate[None](face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum)
use @glStencilOp[None](fail: GLenum, zfail: GLenum, zpass: GLenum)
use @glStencilStrokePathInstancedNV[None](numPaths: GLsizei, pathNametype': GLenum, paths: Pointer[None], pathBase: GLuint, reference: GLint, mask: GLuint, transformtype': GLenum, transformValues: Pointer[GLfloat] tag)
use @glStencilStrokePathNV[None](path: GLuint, reference: GLint, mask: GLuint)
use @glStencilThenCoverFillPathInstancedNV[None](numPaths: GLsizei, pathNametype': GLenum, paths: Pointer[None], pathBase: GLuint, fillMode: GLenum, mask: GLuint, coverMode: GLenum, transformtype': GLenum, transformValues: Pointer[GLfloat] tag)
use @glStencilThenCoverFillPathNV[None](path: GLuint, fillMode: GLenum, mask: GLuint, coverMode: GLenum)
use @glStencilThenCoverStrokePathInstancedNV[None](numPaths: GLsizei, pathNametype': GLenum, paths: Pointer[None], pathBase: GLuint, reference: GLint, mask: GLuint, coverMode: GLenum, transformtype': GLenum, transformValues: Pointer[GLfloat] tag)
use @glStencilThenCoverStrokePathNV[None](path: GLuint, reference: GLint, mask: GLuint, coverMode: GLenum)
use @glSubpixelPrecisionBiasNV[None](xbits: GLuint, ybits: GLuint)
use @glTexAttachMemoryNV[None](target: GLenum, memory: GLuint, offset: GLuint64)
use @glTexBufferARB[None](target: GLenum, internalformat: GLenum, buffer: GLuint)
use @glTexBufferRange[None](target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
use @glTexBuffer[None](target: GLenum, internalformat: GLenum, buffer: GLuint)
use @glTexCoordFormatNV[None](size: GLint, type': GLenum, stride: GLsizei)
use @glTexImage1D[None](target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTexImage2DMultisample[None](target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)
use @glTexImage2D[None](target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTexImage3DMultisample[None](target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
use @glTexImage3D[None](target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTexPageCommitmentARB[None](target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, commit: GLboolean)
use @glTexPageCommitmentMemNV[None](target: GLenum, layer: GLint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64, commit: GLboolean)
use @glTexParameterIiv[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glTexParameterIuiv[None](target: GLenum, pname: GLenum, params: Pointer[GLuint] tag)
use @glTexParameterf[None](target: GLenum, pname: GLenum, param: GLfloat)
use @glTexParameterfv[None](target: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glTexParameteri[None](target: GLenum, pname: GLenum, param: GLint)
use @glTexParameteriv[None](target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glTexStorage1DEXT[None](target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei)
use @glTexStorage1D[None](target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei)
use @glTexStorage2DEXT[None](target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glTexStorage2DMultisample[None](target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)
use @glTexStorage2D[None](target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glTexStorage3DEXT[None](target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei)
use @glTexStorage3DMultisample[None](target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
use @glTexStorage3D[None](target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei)
use @glTexSubImage1D[None](target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTexSubImage2D[None](target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTexSubImage3D[None](target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureAttachMemoryNV[None](texture: GLuint, memory: GLuint, offset: GLuint64)
use @glTextureBarrierNV[None]()
use @glTextureBarrier[None]()
use @glTextureBufferEXT[None](texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint)
use @glTextureBufferRangeEXT[None](texture: GLuint, target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
use @glTextureBufferRange[None](texture: GLuint, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
use @glTextureBuffer[None](texture: GLuint, internalformat: GLenum, buffer: GLuint)
use @glTextureImage1DEXT[None](texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureImage2DEXT[None](texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureImage3DEXT[None](texture: GLuint, target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTexturePageCommitmentEXT[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, commit: GLboolean)
use @glTexturePageCommitmentMemNV[None](texture: GLuint, layer: GLint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, memory: GLuint, offset: GLuint64, commit: GLboolean)
use @glTextureParameterIivEXT[None](texture: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glTextureParameterIiv[None](texture: GLuint, pname: GLenum, params: Pointer[GLint] tag)
use @glTextureParameterIuivEXT[None](texture: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLuint] tag)
use @glTextureParameterIuiv[None](texture: GLuint, pname: GLenum, params: Pointer[GLuint] tag)
use @glTextureParameterfEXT[None](texture: GLuint, target: GLenum, pname: GLenum, param: GLfloat)
use @glTextureParameterf[None](texture: GLuint, pname: GLenum, param: GLfloat)
use @glTextureParameterfvEXT[None](texture: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLfloat] tag)
use @glTextureParameterfv[None](texture: GLuint, pname: GLenum, param: Pointer[GLfloat] tag)
use @glTextureParameteriEXT[None](texture: GLuint, target: GLenum, pname: GLenum, param: GLint)
use @glTextureParameteri[None](texture: GLuint, pname: GLenum, param: GLint)
use @glTextureParameterivEXT[None](texture: GLuint, target: GLenum, pname: GLenum, params: Pointer[GLint] tag)
use @glTextureParameteriv[None](texture: GLuint, pname: GLenum, param: Pointer[GLint] tag)
use @glTextureRenderbufferEXT[None](texture: GLuint, target: GLenum, renderbuffer: GLuint)
use @glTextureStorage1DEXT[None](texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei)
use @glTextureStorage1D[None](texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei)
use @glTextureStorage2DEXT[None](texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glTextureStorage2DMultisampleEXT[None](texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)
use @glTextureStorage2DMultisample[None](texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean)
use @glTextureStorage2D[None](texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei)
use @glTextureStorage3DEXT[None](texture: GLuint, target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei)
use @glTextureStorage3DMultisampleEXT[None](texture: GLuint, target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
use @glTextureStorage3DMultisample[None](texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean)
use @glTextureStorage3D[None](texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei)
use @glTextureSubImage1DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureSubImage1D[None](texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureSubImage2DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureSubImage2D[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureSubImage3DEXT[None](texture: GLuint, target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureSubImage3D[None](texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type': GLenum, pixels: Pointer[None])
use @glTextureView[None](texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint)
use @glTransformFeedbackBufferBase[None](xfb: GLuint, index: GLuint, buffer: GLuint)
use @glTransformFeedbackBufferRange[None](xfb: GLuint, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr)
use @glTransformFeedbackVaryings[None](program: GLuint, count: GLsizei, varyings: Pointer[GLchar] tag, bufferMode: GLenum)
use @glTransformPathNV[None](resultPath: GLuint, srcPath: GLuint, transformtype': GLenum, transformValues: Pointer[GLfloat] tag)
use @glUniform1d[None](location: GLint, x: GLdouble)
use @glUniform1dv[None](location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glUniform1f[None](location: GLint, v: GLfloat)
use @glUniform1fv[None](location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glUniform1i64ARB[None](location: GLint, x: GLint64)
use @glUniform1i64NV[None](location: GLint, x: GLint64EXT)
use @glUniform1i64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLint64] tag)
use @glUniform1i64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLint64EXT] tag)
use @glUniform1i[None](location: GLint, v: GLint)
use @glUniform1iv[None](location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glUniform1ui64ARB[None](location: GLint, x: GLuint64)
use @glUniform1ui64NV[None](location: GLint, x: GLuint64EXT)
use @glUniform1ui64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glUniform1ui64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glUniform1ui[None](location: GLint, v: GLuint)
use @glUniform1uiv[None](location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glUniform2d[None](location: GLint, x: GLdouble, y: GLdouble)
use @glUniform2dv[None](location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glUniform2f[None](location: GLint, v0: GLfloat, v1: GLfloat)
use @glUniform2fv[None](location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glUniform2i64ARB[None](location: GLint, x: GLint64, y: GLint64)
use @glUniform2i64NV[None](location: GLint, x: GLint64EXT, y: GLint64EXT)
use @glUniform2i64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLint64] tag)
use @glUniform2i64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLint64EXT] tag)
use @glUniform2i[None](location: GLint, v0: GLint, v1: GLint)
use @glUniform2iv[None](location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glUniform2ui64ARB[None](location: GLint, x: GLuint64, y: GLuint64)
use @glUniform2ui64NV[None](location: GLint, x: GLuint64EXT, y: GLuint64EXT)
use @glUniform2ui64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glUniform2ui64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glUniform2ui[None](location: GLint, v0: GLuint, v1: GLuint)
use @glUniform2uiv[None](location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glUniform3d[None](location: GLint, x: GLdouble, y: GLdouble, z: GLdouble)
use @glUniform3dv[None](location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glUniform3f[None](location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat)
use @glUniform3fv[None](location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glUniform3i64ARB[None](location: GLint, x: GLint64, y: GLint64, z: GLint64)
use @glUniform3i64NV[None](location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT)
use @glUniform3i64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLint64] tag)
use @glUniform3i64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLint64EXT] tag)
use @glUniform3i[None](location: GLint, v0: GLint, v1: GLint, v2: GLint)
use @glUniform3iv[None](location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glUniform3ui64ARB[None](location: GLint, x: GLuint64, y: GLuint64, z: GLuint64)
use @glUniform3ui64NV[None](location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT)
use @glUniform3ui64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glUniform3ui64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glUniform3ui[None](location: GLint, v0: GLuint, v1: GLuint, v2: GLuint)
use @glUniform3uiv[None](location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glUniform4d[None](location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
use @glUniform4dv[None](location: GLint, count: GLsizei, value: Pointer[GLdouble] tag)
use @glUniform4f[None](location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat)
use @glUniform4fv[None](location: GLint, count: GLsizei, value: Pointer[GLfloat] tag)
use @glUniform4i64ARB[None](location: GLint, x: GLint64, y: GLint64, z: GLint64, w: GLint64)
use @glUniform4i64NV[None](location: GLint, x: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT)
use @glUniform4i64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLint64] tag)
use @glUniform4i64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLint64EXT] tag)
use @glUniform4i[None](location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint)
use @glUniform4iv[None](location: GLint, count: GLsizei, value: Pointer[GLint] tag)
use @glUniform4ui64ARB[None](location: GLint, x: GLuint64, y: GLuint64, z: GLuint64, w: GLuint64)
use @glUniform4ui64NV[None](location: GLint, x: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT)
use @glUniform4ui64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glUniform4ui64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glUniform4ui[None](location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint)
use @glUniform4uiv[None](location: GLint, count: GLsizei, value: Pointer[GLuint] tag)
use @glUniformBlockBinding[None](program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint)
use @glUniformHandleui64ARB[None](location: GLint, value: GLuint64)
use @glUniformHandleui64NV[None](location: GLint, value: GLuint64)
use @glUniformHandleui64vARB[None](location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glUniformHandleui64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLuint64] tag)
use @glUniformMatrix2dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix2fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformMatrix2x3dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix2x3fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformMatrix2x4dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix2x4fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformMatrix3dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix3fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformMatrix3x2dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix3x2fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformMatrix3x4dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix3x4fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformMatrix4dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix4fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformMatrix4x2dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix4x2fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformMatrix4x3dv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLdouble] tag)
use @glUniformMatrix4x3fv[None](location: GLint, count: GLsizei, transpose: GLboolean, value: Pointer[GLfloat] tag)
use @glUniformSubroutinesuiv[None](shadertype': GLenum, count: GLsizei, indices: Pointer[GLuint] tag)
use @glUniformui64NV[None](location: GLint, value: GLuint64EXT)
use @glUniformui64vNV[None](location: GLint, count: GLsizei, value: Pointer[GLuint64EXT] tag)
use @glUnmapBuffer[GLboolean](target: GLenum)
use @glUnmapNamedBufferEXT[GLboolean](buffer: GLuint)
use @glUnmapNamedBuffer[GLboolean](buffer: GLuint)
use @glUseProgramStages[None](pipeline: GLuint, stages: GLbitfield, program: GLuint)
use @glUseProgram[None](program: GLuint)
use @glUseShaderProgramEXT[None](type': GLenum, program: GLuint)
use @glValidateProgramPipeline[None](pipeline: GLuint)
use @glValidateProgram[None](program: GLuint)
use @glVertexArrayAttribBinding[None](vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint)
use @glVertexArrayAttribFormat[None](vaobj: GLuint, attribindex: GLuint, size: GLint, type': GLenum, normalized: GLboolean, relativeoffset: GLuint)
use @glVertexArrayAttribIFormat[None](vaobj: GLuint, attribindex: GLuint, size: GLint, type': GLenum, relativeoffset: GLuint)
use @glVertexArrayAttribLFormat[None](vaobj: GLuint, attribindex: GLuint, size: GLint, type': GLenum, relativeoffset: GLuint)
use @glVertexArrayBindVertexBufferEXT[None](vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei)
use @glVertexArrayBindingDivisor[None](vaobj: GLuint, bindingindex: GLuint, divisor: GLuint)
use @glVertexArrayColorOffsetEXT[None](vaobj: GLuint, buffer: GLuint, size: GLint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArrayEdgeFlagOffsetEXT[None](vaobj: GLuint, buffer: GLuint, stride: GLsizei, offset: GLintptr)
use @glVertexArrayElementBuffer[None](vaobj: GLuint, buffer: GLuint)
use @glVertexArrayFogCoordOffsetEXT[None](vaobj: GLuint, buffer: GLuint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArrayIndexOffsetEXT[None](vaobj: GLuint, buffer: GLuint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArrayMultiTexCoordOffsetEXT[None](vaobj: GLuint, buffer: GLuint, texunit: GLenum, size: GLint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArrayNormalOffsetEXT[None](vaobj: GLuint, buffer: GLuint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArraySecondaryColorOffsetEXT[None](vaobj: GLuint, buffer: GLuint, size: GLint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArrayTexCoordOffsetEXT[None](vaobj: GLuint, buffer: GLuint, size: GLint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArrayVertexAttribBindingEXT[None](vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint)
use @glVertexArrayVertexAttribDivisorEXT[None](vaobj: GLuint, index: GLuint, divisor: GLuint)
use @glVertexArrayVertexAttribFormatEXT[None](vaobj: GLuint, attribindex: GLuint, size: GLint, type': GLenum, normalized: GLboolean, relativeoffset: GLuint)
use @glVertexArrayVertexAttribIFormatEXT[None](vaobj: GLuint, attribindex: GLuint, size: GLint, type': GLenum, relativeoffset: GLuint)
use @glVertexArrayVertexAttribIOffsetEXT[None](vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArrayVertexAttribLFormatEXT[None](vaobj: GLuint, attribindex: GLuint, size: GLint, type': GLenum, relativeoffset: GLuint)
use @glVertexArrayVertexAttribLOffsetEXT[None](vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexArrayVertexAttribOffsetEXT[None](vaobj: GLuint, buffer: GLuint, index: GLuint, size: GLint, type': GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr)
use @glVertexArrayVertexBindingDivisorEXT[None](vaobj: GLuint, bindingindex: GLuint, divisor: GLuint)
use @glVertexArrayVertexBuffer[None](vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei)
use @glVertexArrayVertexBuffers[None](vaobj: GLuint, first: GLuint, count: GLsizei, buffers: Pointer[GLuint] tag, offsets: Pointer[GLintptr] tag, strides: Pointer[GLsizei] tag)
use @glVertexArrayVertexOffsetEXT[None](vaobj: GLuint, buffer: GLuint, size: GLint, type': GLenum, stride: GLsizei, offset: GLintptr)
use @glVertexAttrib1d[None](index0: GLuint, x1: GLdouble)
use @glVertexAttrib1dv[None](index: GLuint, v: Pointer[GLdouble] tag)
use @glVertexAttrib1f[None](index0: GLuint, x1: GLfloat)
use @glVertexAttrib1fv[None](index: GLuint, v: Pointer[GLfloat] tag)
use @glVertexAttrib1s[None](index0: GLuint, x1: GLshort)
use @glVertexAttrib1sv[None](index: GLuint, v: Pointer[GLshort] tag)
use @glVertexAttrib2d[None](index0: GLuint, x1: GLdouble, y: GLdouble)
use @glVertexAttrib2dv[None](index: GLuint, v: Pointer[GLdouble] tag)
use @glVertexAttrib2f[None](index0: GLuint, x1: GLfloat, y: GLfloat)
use @glVertexAttrib2fv[None](index: GLuint, v: Pointer[GLfloat] tag)
use @glVertexAttrib2s[None](index0: GLuint, x1: GLshort, y: GLshort)
use @glVertexAttrib2sv[None](index: GLuint, v: Pointer[GLshort] tag)
use @glVertexAttrib3d[None](index0: GLuint, x1: GLdouble, y: GLdouble, z: GLdouble)
use @glVertexAttrib3dv[None](index: GLuint, v: Pointer[GLdouble] tag)
use @glVertexAttrib3f[None](index0: GLuint, x1: GLfloat, y: GLfloat, z: GLfloat)
use @glVertexAttrib3fv[None](index: GLuint, v: Pointer[GLfloat] tag)
use @glVertexAttrib3s[None](index0: GLuint, x1: GLshort, y: GLshort, z: GLshort)
use @glVertexAttrib3sv[None](index: GLuint, v: Pointer[GLshort] tag)
use @glVertexAttrib4Nbv[None](index: GLuint, v: Pointer[GLbyte] tag)
use @glVertexAttrib4Niv[None](index: GLuint, v: Pointer[GLint] tag)
use @glVertexAttrib4Nsv[None](index: GLuint, v: Pointer[GLshort] tag)
use @glVertexAttrib4Nub[None](index0: GLuint, x1: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte)
use @glVertexAttrib4Nubv[None](index: GLuint, v: Pointer[GLubyte] tag)
use @glVertexAttrib4Nuiv[None](index: GLuint, v: Pointer[GLuint] tag)
use @glVertexAttrib4Nusv[None](index: GLuint, v: Pointer[GLushort] tag)
use @glVertexAttrib4bv[None](index: GLuint, v: Pointer[GLbyte] tag)
use @glVertexAttrib4d[None](index0: GLuint, x1: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
use @glVertexAttrib4dv[None](index: GLuint, v: Pointer[GLdouble] tag)
use @glVertexAttrib4f[None](index0: GLuint, x1: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat)
use @glVertexAttrib4fv[None](index: GLuint, v: Pointer[GLfloat] tag)
use @glVertexAttrib4iv[None](index: GLuint, v: Pointer[GLint] tag)
use @glVertexAttrib4s[None](index0: GLuint, x1: GLshort, y: GLshort, z: GLshort, w: GLshort)
use @glVertexAttrib4sv[None](index: GLuint, v: Pointer[GLshort] tag)
use @glVertexAttrib4ubv[None](index: GLuint, v: Pointer[GLubyte] tag)
use @glVertexAttrib4uiv[None](index: GLuint, v: Pointer[GLuint] tag)
use @glVertexAttrib4usv[None](index: GLuint, v: Pointer[GLushort] tag)
use @glVertexAttribBinding[None](attribindex: GLuint, bindingindex: GLuint)
use @glVertexAttribDivisorARB[None](index: GLuint, divisor: GLuint)
use @glVertexAttribDivisor[None](index: GLuint, divisor: GLuint)
use @glVertexAttribFormatNV[None](index: GLuint, size: GLint, type': GLenum, normalized: GLboolean, stride: GLsizei)
use @glVertexAttribFormat[None](attribindex: GLuint, size: GLint, type': GLenum, normalized: GLboolean, relativeoffset: GLuint)
use @glVertexAttribI1i[None](index0: GLuint, x1: GLint)
use @glVertexAttribI1iv[None](index: GLuint, v: Pointer[GLint] tag)
use @glVertexAttribI1ui[None](index0: GLuint, x1: GLuint)
use @glVertexAttribI1uiv[None](index: GLuint, v: Pointer[GLuint] tag)
use @glVertexAttribI2i[None](index0: GLuint, x1: GLint, y: GLint)
use @glVertexAttribI2iv[None](index: GLuint, v: Pointer[GLint] tag)
use @glVertexAttribI2ui[None](index0: GLuint, x1: GLuint, y: GLuint)
use @glVertexAttribI2uiv[None](index: GLuint, v: Pointer[GLuint] tag)
use @glVertexAttribI3i[None](index0: GLuint, x1: GLint, y: GLint, z: GLint)
use @glVertexAttribI3iv[None](index: GLuint, v: Pointer[GLint] tag)
use @glVertexAttribI3ui[None](index0: GLuint, x1: GLuint, y: GLuint, z: GLuint)
use @glVertexAttribI3uiv[None](index: GLuint, v: Pointer[GLuint] tag)
use @glVertexAttribI4bv[None](index: GLuint, v: Pointer[GLbyte] tag)
use @glVertexAttribI4i[None](index0: GLuint, x1: GLint, y: GLint, z: GLint, w: GLint)
use @glVertexAttribI4iv[None](index: GLuint, v: Pointer[GLint] tag)
use @glVertexAttribI4sv[None](index: GLuint, v: Pointer[GLshort] tag)
use @glVertexAttribI4ubv[None](index: GLuint, v: Pointer[GLubyte] tag)
use @glVertexAttribI4ui[None](index0: GLuint, x1: GLuint, y: GLuint, z: GLuint, w: GLuint)
use @glVertexAttribI4uiv[None](index: GLuint, v: Pointer[GLuint] tag)
use @glVertexAttribI4usv[None](index: GLuint, v: Pointer[GLushort] tag)
use @glVertexAttribIFormatNV[None](index: GLuint, size: GLint, type': GLenum, stride: GLsizei)
use @glVertexAttribIFormat[None](attribindex: GLuint, size: GLint, type': GLenum, relativeoffset: GLuint)
use @glVertexAttribIPointer[None](index: GLuint, size: GLint, type': GLenum, stride: GLsizei, pointer: Pointer[None])
use @glVertexAttribL1d[None](index0: GLuint, x1: GLdouble)
use @glVertexAttribL1dv[None](index: GLuint, v: Pointer[GLdouble] tag)
use @glVertexAttribL1i64NV[None](index0: GLuint, x1: GLint64EXT)
use @glVertexAttribL1i64vNV[None](index: GLuint, v: Pointer[GLint64EXT] tag)
use @glVertexAttribL1ui64ARB[None](index0: GLuint, x1: GLuint64EXT)
use @glVertexAttribL1ui64NV[None](index0: GLuint, x1: GLuint64EXT)
use @glVertexAttribL1ui64vARB[None](index: GLuint, v: Pointer[GLuint64EXT] tag)
use @glVertexAttribL1ui64vNV[None](index: GLuint, v: Pointer[GLuint64EXT] tag)
use @glVertexAttribL2d[None](index0: GLuint, x1: GLdouble, y: GLdouble)
use @glVertexAttribL2dv[None](index: GLuint, v: Pointer[GLdouble] tag)
use @glVertexAttribL2i64NV[None](index0: GLuint, x1: GLint64EXT, y: GLint64EXT)
use @glVertexAttribL2i64vNV[None](index: GLuint, v: Pointer[GLint64EXT] tag)
use @glVertexAttribL2ui64NV[None](index0: GLuint, x1: GLuint64EXT, y: GLuint64EXT)
use @glVertexAttribL2ui64vNV[None](index: GLuint, v: Pointer[GLuint64EXT] tag)
use @glVertexAttribL3d[None](index0: GLuint, x1: GLdouble, y: GLdouble, z: GLdouble)
use @glVertexAttribL3dv[None](index: GLuint, v: Pointer[GLdouble] tag)
use @glVertexAttribL3i64NV[None](index0: GLuint, x1: GLint64EXT, y: GLint64EXT, z: GLint64EXT)
use @glVertexAttribL3i64vNV[None](index: GLuint, v: Pointer[GLint64EXT] tag)
use @glVertexAttribL3ui64NV[None](index0: GLuint, x1: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT)
use @glVertexAttribL3ui64vNV[None](index: GLuint, v: Pointer[GLuint64EXT] tag)
use @glVertexAttribL4d[None](index0: GLuint, x1: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble)
use @glVertexAttribL4dv[None](index: GLuint, v: Pointer[GLdouble] tag)
use @glVertexAttribL4i64NV[None](index0: GLuint, x1: GLint64EXT, y: GLint64EXT, z: GLint64EXT, w: GLint64EXT)
use @glVertexAttribL4i64vNV[None](index: GLuint, v: Pointer[GLint64EXT] tag)
use @glVertexAttribL4ui64NV[None](index0: GLuint, x1: GLuint64EXT, y: GLuint64EXT, z: GLuint64EXT, w: GLuint64EXT)
use @glVertexAttribL4ui64vNV[None](index: GLuint, v: Pointer[GLuint64EXT] tag)
use @glVertexAttribLFormatNV[None](index: GLuint, size: GLint, type': GLenum, stride: GLsizei)
use @glVertexAttribLFormat[None](attribindex: GLuint, size: GLint, type': GLenum, relativeoffset: GLuint)
use @glVertexAttribLPointer[None](index: GLuint, size: GLint, type': GLenum, stride: GLsizei, pointer: Pointer[None])
use @glVertexAttribP1ui[None](index: GLuint, type': GLenum, normalized: GLboolean, value: GLuint)
use @glVertexAttribP1uiv[None](index: GLuint, type': GLenum, normalized: GLboolean, value: Pointer[GLuint] tag)
use @glVertexAttribP2ui[None](index: GLuint, type': GLenum, normalized: GLboolean, value: GLuint)
use @glVertexAttribP2uiv[None](index: GLuint, type': GLenum, normalized: GLboolean, value: Pointer[GLuint] tag)
use @glVertexAttribP3ui[None](index: GLuint, type': GLenum, normalized: GLboolean, value: GLuint)
use @glVertexAttribP3uiv[None](index: GLuint, type': GLenum, normalized: GLboolean, value: Pointer[GLuint] tag)
use @glVertexAttribP4ui[None](index: GLuint, type': GLenum, normalized: GLboolean, value: GLuint)
use @glVertexAttribP4uiv[None](index: GLuint, type': GLenum, normalized: GLboolean, value: Pointer[GLuint] tag)
use @glVertexAttribPointer[None](index: GLuint, size: GLint, type': GLenum, normalized: GLboolean, stride: GLsizei, pointer: Pointer[None])
use @glVertexBindingDivisor[None](bindingindex: GLuint, divisor: GLuint)
use @glVertexFormatNV[None](size: GLint, type': GLenum, stride: GLsizei)
use @glViewportArrayv[None](first: GLuint, count: GLsizei, v: Pointer[GLfloat] tag)
use @glViewportIndexedf[None](index0: GLuint, x1: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat)
use @glViewportIndexedfv[None](index: GLuint, v: Pointer[GLfloat] tag)
use @glViewportPositionWScaleNV[None](index: GLuint, xcoeff: GLfloat, ycoeff: GLfloat)
use @glViewportSwizzleNV[None](index: GLuint, swizzlex: GLenum, swizzley: GLenum, swizzlez: GLenum, swizzlew: GLenum)
use @glViewport[None](x: GLint, y: GLint, width: GLsizei, height: GLsizei)
use @glWaitSync[None](sync: GLsync, flags: GLbitfield, timeout: GLuint64)
use @glWaitVkSemaphoreNV[None](vkSemaphore: GLuint64)
use @glWeightPathsNV[None](resultPath: GLuint, numPaths: GLsizei, paths: Pointer[GLuint] tag, weights: Pointer[GLfloat] tag)
use @glWindowRectanglesEXT[None](mode: GLenum, count: GLsizei, box': Pointer[GLint] tag)
